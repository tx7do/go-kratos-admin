// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dict/service/v1/dict.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 字典类型
type DictType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                  // 字典类型ID
	TypeCode      *string                `protobuf:"bytes,2,opt,name=type_code,json=typeCode,proto3,oneof" json:"type_code,omitempty"`       // 字典类型唯一代码
	TypeName      *string                `protobuf:"bytes,3,opt,name=type_name,json=typeName,proto3,oneof" json:"type_name,omitempty"`       // 字典类型名称
	IsEnabled     *bool                  `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled,proto3,oneof" json:"is_enabled,omitempty"`   // 字典状态
	SortOrder     *int32                 `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3,oneof" json:"sort_order,omitempty"`   // 排序顺序，值越小越靠前
	Description   *string                `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`                 // 描述
	CreatedBy     *uint32                `protobuf:"varint,100,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"` // 创建者用户ID
	UpdatedBy     *uint32                `protobuf:"varint,101,opt,name=updated_by,json=updatedBy,proto3,oneof" json:"updated_by,omitempty"` // 更新者用户ID
	DeletedBy     *uint32                `protobuf:"varint,102,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"` // 删除者用户ID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`  // 创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`  // 更新时间
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`  // 删除时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DictType) Reset() {
	*x = DictType{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictType) ProtoMessage() {}

func (x *DictType) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictType.ProtoReflect.Descriptor instead.
func (*DictType) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{0}
}

func (x *DictType) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DictType) GetTypeCode() string {
	if x != nil && x.TypeCode != nil {
		return *x.TypeCode
	}
	return ""
}

func (x *DictType) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *DictType) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *DictType) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *DictType) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *DictType) GetCreatedBy() uint32 {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return 0
}

func (x *DictType) GetUpdatedBy() uint32 {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return 0
}

func (x *DictType) GetDeletedBy() uint32 {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return 0
}

func (x *DictType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DictType) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DictType) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// 字典条目
type DictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                         // 字典条目ID
	TypeId        *uint32                `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3,oneof" json:"type_id,omitempty"`                   // 字典类型ID
	EntryLabel    *string                `protobuf:"bytes,3,opt,name=entry_label,json=entryLabel,proto3,oneof" json:"entry_label,omitempty"`        // 字典项的显示标签
	EntryValue    *string                `protobuf:"bytes,4,opt,name=entry_value,json=entryValue,proto3,oneof" json:"entry_value,omitempty"`        // 字典项的实际值
	NumericValue  *int32                 `protobuf:"varint,5,opt,name=numeric_value,json=numericValue,proto3,oneof" json:"numeric_value,omitempty"` // 数值型值
	LanguageCode  *string                `protobuf:"bytes,6,opt,name=language_code,json=languageCode,proto3,oneof" json:"language_code,omitempty"`  // 语言代码
	IsEnabled     *bool                  `protobuf:"varint,7,opt,name=is_enabled,json=isEnabled,proto3,oneof" json:"is_enabled,omitempty"`          // 字典状态
	SortOrder     *int32                 `protobuf:"varint,8,opt,name=sort_order,json=sortOrder,proto3,oneof" json:"sort_order,omitempty"`          // 排序顺序，值越小越靠前
	Description   *string                `protobuf:"bytes,9,opt,name=description,proto3,oneof" json:"description,omitempty"`                        // 描述
	CreatedBy     *uint32                `protobuf:"varint,100,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"`        // 创建者ID
	UpdatedBy     *uint32                `protobuf:"varint,101,opt,name=updated_by,json=updatedBy,proto3,oneof" json:"updated_by,omitempty"`        // 更新者ID
	DeletedBy     *uint32                `protobuf:"varint,102,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`        // 删除者用户ID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`         // 创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`         // 更新时间
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`         // 删除时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DictEntry) Reset() {
	*x = DictEntry{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictEntry) ProtoMessage() {}

func (x *DictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictEntry.ProtoReflect.Descriptor instead.
func (*DictEntry) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{1}
}

func (x *DictEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DictEntry) GetTypeId() uint32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *DictEntry) GetEntryLabel() string {
	if x != nil && x.EntryLabel != nil {
		return *x.EntryLabel
	}
	return ""
}

func (x *DictEntry) GetEntryValue() string {
	if x != nil && x.EntryValue != nil {
		return *x.EntryValue
	}
	return ""
}

func (x *DictEntry) GetNumericValue() int32 {
	if x != nil && x.NumericValue != nil {
		return *x.NumericValue
	}
	return 0
}

func (x *DictEntry) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *DictEntry) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *DictEntry) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *DictEntry) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *DictEntry) GetCreatedBy() uint32 {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return 0
}

func (x *DictEntry) GetUpdatedBy() uint32 {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return 0
}

func (x *DictEntry) GetDeletedBy() uint32 {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return 0
}

func (x *DictEntry) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DictEntry) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DictEntry) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// 查询字典类型列表 - 回应
type ListDictTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DictType            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDictTypeResponse) Reset() {
	*x = ListDictTypeResponse{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDictTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictTypeResponse) ProtoMessage() {}

func (x *ListDictTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictTypeResponse.ProtoReflect.Descriptor instead.
func (*ListDictTypeResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{2}
}

func (x *ListDictTypeResponse) GetItems() []*DictType {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDictTypeResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 查询字典类型详情 - 请求
type GetDictTypeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to QueryBy:
	//
	//	*GetDictTypeRequest_Id
	//	*GetDictTypeRequest_Code
	QueryBy       isGetDictTypeRequest_QueryBy `protobuf_oneof:"query_by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDictTypeRequest) Reset() {
	*x = GetDictTypeRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictTypeRequest) ProtoMessage() {}

func (x *GetDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictTypeRequest.ProtoReflect.Descriptor instead.
func (*GetDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{3}
}

func (x *GetDictTypeRequest) GetQueryBy() isGetDictTypeRequest_QueryBy {
	if x != nil {
		return x.QueryBy
	}
	return nil
}

func (x *GetDictTypeRequest) GetId() uint32 {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictTypeRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetDictTypeRequest) GetCode() string {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictTypeRequest_Code); ok {
			return x.Code
		}
	}
	return ""
}

type isGetDictTypeRequest_QueryBy interface {
	isGetDictTypeRequest_QueryBy()
}

type GetDictTypeRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetDictTypeRequest_Code struct {
	Code string `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*GetDictTypeRequest_Id) isGetDictTypeRequest_QueryBy() {}

func (*GetDictTypeRequest_Code) isGetDictTypeRequest_QueryBy() {}

// 创建字典类型 - 请求
type CreateDictTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictType              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDictTypeRequest) Reset() {
	*x = CreateDictTypeRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictTypeRequest) ProtoMessage() {}

func (x *CreateDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDictTypeRequest) GetData() *DictType {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新字典类型 - 请求
type UpdateDictTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictType              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDictTypeRequest) Reset() {
	*x = UpdateDictTypeRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDictTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictTypeRequest) ProtoMessage() {}

func (x *UpdateDictTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictTypeRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDictTypeRequest) GetData() *DictType {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateDictTypeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDictTypeRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 批量删除字典 - 请求
type BatchDeleteDictRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []uint32               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 要删除的ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteDictRequest) Reset() {
	*x = BatchDeleteDictRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDictRequest) ProtoMessage() {}

func (x *BatchDeleteDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDictRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteDictRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{6}
}

func (x *BatchDeleteDictRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 查询字典条目列表 - 回应
type ListDictEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DictEntry           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDictEntryResponse) Reset() {
	*x = ListDictEntryResponse{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDictEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictEntryResponse) ProtoMessage() {}

func (x *ListDictEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictEntryResponse.ProtoReflect.Descriptor instead.
func (*ListDictEntryResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{7}
}

func (x *ListDictEntryResponse) GetItems() []*DictEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDictEntryResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 创建字典条目 - 请求
type CreateDictEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictEntry             `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDictEntryRequest) Reset() {
	*x = CreateDictEntryRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDictEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictEntryRequest) ProtoMessage() {}

func (x *CreateDictEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateDictEntryRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDictEntryRequest) GetData() *DictEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新字典条目 - 请求
type UpdateDictEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictEntry             `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDictEntryRequest) Reset() {
	*x = UpdateDictEntryRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDictEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictEntryRequest) ProtoMessage() {}

func (x *UpdateDictEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictEntryRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDictEntryRequest) GetData() *DictEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateDictEntryRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDictEntryRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 查询字典条目详情 - 请求
type GetDictEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to QueryBy:
	//
	//	*GetDictEntryRequest_Id
	//	*GetDictEntryRequest_Code
	QueryBy       isGetDictEntryRequest_QueryBy `protobuf_oneof:"query_by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDictEntryRequest) Reset() {
	*x = GetDictEntryRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDictEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictEntryRequest) ProtoMessage() {}

func (x *GetDictEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictEntryRequest.ProtoReflect.Descriptor instead.
func (*GetDictEntryRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{10}
}

func (x *GetDictEntryRequest) GetQueryBy() isGetDictEntryRequest_QueryBy {
	if x != nil {
		return x.QueryBy
	}
	return nil
}

func (x *GetDictEntryRequest) GetId() uint32 {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictEntryRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetDictEntryRequest) GetCode() string {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictEntryRequest_Code); ok {
			return x.Code
		}
	}
	return ""
}

type isGetDictEntryRequest_QueryBy interface {
	isGetDictEntryRequest_QueryBy()
}

type GetDictEntryRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetDictEntryRequest_Code struct {
	Code string `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*GetDictEntryRequest_Id) isGetDictEntryRequest_QueryBy() {}

func (*GetDictEntryRequest_Code) isGetDictEntryRequest_QueryBy() {}

var File_dict_service_v1_dict_proto protoreflect.FileDescriptor

const file_dict_service_v1_dict_proto_rawDesc = "" +
	"\n" +
	"\x1adict/service/v1/dict.proto\x12\x0fdict.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1epagination/v1/pagination.proto\"\xce\a\n" +
	"\bDictType\x12)\n" +
	"\x02id\x18\x01 \x01(\rB\x14\xbaG\x11\x92\x02\x0e字典类型IDH\x00R\x02id\x88\x01\x01\x12@\n" +
	"\ttype_code\x18\x02 \x01(\tB\x1e\xbaG\x1b\x92\x02\x18字典类型唯一代码H\x01R\btypeCode\x88\x01\x01\x12:\n" +
	"\ttype_name\x18\x03 \x01(\tB\x18\xbaG\x15\x92\x02\x12字典类型名称H\x02R\btypeName\x88\x01\x01\x126\n" +
	"\n" +
	"is_enabled\x18\x04 \x01(\bB\x12\xbaG\x0f\x92\x02\f字典状态H\x03R\tisEnabled\x88\x01\x01\x12K\n" +
	"\n" +
	"sort_order\x18\x05 \x01(\x05B'\xbaG$\x92\x02!排序顺序，值越小越靠前H\x04R\tsortOrder\x88\x01\x01\x123\n" +
	"\vdescription\x18\x06 \x01(\tB\f\xbaG\t\x92\x02\x06描述H\x05R\vdescription\x88\x01\x01\x12;\n" +
	"\n" +
	"created_by\x18d \x01(\rB\x17\xbaG\x14\x92\x02\x11创建者用户IDH\x06R\tcreatedBy\x88\x01\x01\x12;\n" +
	"\n" +
	"updated_by\x18e \x01(\rB\x17\xbaG\x14\x92\x02\x11更新者用户IDH\aR\tupdatedBy\x88\x01\x01\x12;\n" +
	"\n" +
	"deleted_by\x18f \x01(\rB\x17\xbaG\x14\x92\x02\x11删除者用户IDH\bR\tdeletedBy\x88\x01\x01\x12S\n" +
	"\n" +
	"created_at\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\tR\tcreatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"updated_at\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\n" +
	"R\tupdatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"deleted_at\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\vR\tdeletedAt\x88\x01\x01B\x05\n" +
	"\x03_idB\f\n" +
	"\n" +
	"_type_codeB\f\n" +
	"\n" +
	"_type_nameB\r\n" +
	"\v_is_enabledB\r\n" +
	"\v_sort_orderB\x0e\n" +
	"\f_descriptionB\r\n" +
	"\v_created_byB\r\n" +
	"\v_updated_byB\r\n" +
	"\v_deleted_byB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atB\r\n" +
	"\v_deleted_at\"\xb2\t\n" +
	"\tDictEntry\x12)\n" +
	"\x02id\x18\x01 \x01(\rB\x14\xbaG\x11\x92\x02\x0e字典条目IDH\x00R\x02id\x88\x01\x01\x122\n" +
	"\atype_id\x18\x02 \x01(\rB\x14\xbaG\x11\x92\x02\x0e字典类型IDH\x01R\x06typeId\x88\x01\x01\x12D\n" +
	"\ventry_label\x18\x03 \x01(\tB\x1e\xbaG\x1b\x92\x02\x18字典项的显示标签H\x02R\n" +
	"entryLabel\x88\x01\x01\x12A\n" +
	"\ventry_value\x18\x04 \x01(\tB\x1b\xbaG\x18\x92\x02\x15字典项的实际值H\x03R\n" +
	"entryValue\x88\x01\x01\x12<\n" +
	"\rnumeric_value\x18\x05 \x01(\x05B\x12\xbaG\x0f\x92\x02\f数值型值H\x04R\fnumericValue\x88\x01\x01\x12<\n" +
	"\rlanguage_code\x18\x06 \x01(\tB\x12\xbaG\x0f\x92\x02\f语言代码H\x05R\flanguageCode\x88\x01\x01\x126\n" +
	"\n" +
	"is_enabled\x18\a \x01(\bB\x12\xbaG\x0f\x92\x02\f字典状态H\x06R\tisEnabled\x88\x01\x01\x12K\n" +
	"\n" +
	"sort_order\x18\b \x01(\x05B'\xbaG$\x92\x02!排序顺序，值越小越靠前H\aR\tsortOrder\x88\x01\x01\x123\n" +
	"\vdescription\x18\t \x01(\tB\f\xbaG\t\x92\x02\x06描述H\bR\vdescription\x88\x01\x01\x125\n" +
	"\n" +
	"created_by\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\tR\tcreatedBy\x88\x01\x01\x125\n" +
	"\n" +
	"updated_by\x18e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\n" +
	"R\tupdatedBy\x88\x01\x01\x12;\n" +
	"\n" +
	"deleted_by\x18f \x01(\rB\x17\xbaG\x14\x92\x02\x11删除者用户IDH\vR\tdeletedBy\x88\x01\x01\x12S\n" +
	"\n" +
	"created_at\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\fR\tcreatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"updated_at\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\rR\tupdatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"deleted_at\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\x0eR\tdeletedAt\x88\x01\x01B\x05\n" +
	"\x03_idB\n" +
	"\n" +
	"\b_type_idB\x0e\n" +
	"\f_entry_labelB\x0e\n" +
	"\f_entry_valueB\x10\n" +
	"\x0e_numeric_valueB\x10\n" +
	"\x0e_language_codeB\r\n" +
	"\v_is_enabledB\r\n" +
	"\v_sort_orderB\x0e\n" +
	"\f_descriptionB\r\n" +
	"\v_created_byB\r\n" +
	"\v_updated_byB\r\n" +
	"\v_deleted_byB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atB\r\n" +
	"\v_deleted_at\"]\n" +
	"\x14ListDictTypeResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.dict.service.v1.DictTypeR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"H\n" +
	"\x12GetDictTypeRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x12\x14\n" +
	"\x04code\x18\x02 \x01(\tH\x00R\x04codeB\n" +
	"\n" +
	"\bquery_by\"F\n" +
	"\x15CreateDictTypeRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictTypeR\x04data\"\x84\x03\n" +
	"\x15UpdateDictTypeRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictTypeR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"*\n" +
	"\x16BatchDeleteDictRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\rR\x03ids\"_\n" +
	"\x15ListDictEntryResponse\x120\n" +
	"\x05items\x18\x01 \x03(\v2\x1a.dict.service.v1.DictEntryR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"H\n" +
	"\x16CreateDictEntryRequest\x12.\n" +
	"\x04data\x18\x01 \x01(\v2\x1a.dict.service.v1.DictEntryR\x04data\"\x86\x03\n" +
	"\x16UpdateDictEntryRequest\x12.\n" +
	"\x04data\x18\x01 \x01(\v2\x1a.dict.service.v1.DictEntryR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"I\n" +
	"\x13GetDictEntryRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x12\x14\n" +
	"\x04code\x18\x02 \x01(\tH\x00R\x04codeB\n" +
	"\n" +
	"\bquery_by2\x87\x06\n" +
	"\vDictService\x12R\n" +
	"\fListDictType\x12\x19.pagination.PagingRequest\x1a%.dict.service.v1.ListDictTypeResponse\"\x00\x12O\n" +
	"\vGetDictType\x12#.dict.service.v1.GetDictTypeRequest\x1a\x19.dict.service.v1.DictType\"\x00\x12R\n" +
	"\x0eCreateDictType\x12&.dict.service.v1.CreateDictTypeRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\x0eUpdateDictType\x12&.dict.service.v1.UpdateDictTypeRequest\x1a\x16.google.protobuf.Empty\"\x00\x12S\n" +
	"\x0eDeleteDictType\x12'.dict.service.v1.BatchDeleteDictRequest\x1a\x16.google.protobuf.Empty\"\x00\x12T\n" +
	"\rListDictEntry\x12\x19.pagination.PagingRequest\x1a&.dict.service.v1.ListDictEntryResponse\"\x00\x12T\n" +
	"\x0fCreateDictEntry\x12'.dict.service.v1.CreateDictEntryRequest\x1a\x16.google.protobuf.Empty\"\x00\x12T\n" +
	"\x0fUpdateDictEntry\x12'.dict.service.v1.UpdateDictEntryRequest\x1a\x16.google.protobuf.Empty\"\x00\x12T\n" +
	"\x0fDeleteDictEntry\x12'.dict.service.v1.BatchDeleteDictRequest\x1a\x16.google.protobuf.Empty\"\x00B\xb1\x01\n" +
	"\x13com.dict.service.v1B\tDictProtoP\x01Z1kratos-admin/api/gen/go/dict/service/v1;servicev1\xa2\x02\x03DSX\xaa\x02\x0fDict.Service.V1\xca\x02\x0fDict\\Service\\V1\xe2\x02\x1bDict\\Service\\V1\\GPBMetadata\xea\x02\x11Dict::Service::V1b\x06proto3"

var (
	file_dict_service_v1_dict_proto_rawDescOnce sync.Once
	file_dict_service_v1_dict_proto_rawDescData []byte
)

func file_dict_service_v1_dict_proto_rawDescGZIP() []byte {
	file_dict_service_v1_dict_proto_rawDescOnce.Do(func() {
		file_dict_service_v1_dict_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dict_service_v1_dict_proto_rawDesc), len(file_dict_service_v1_dict_proto_rawDesc)))
	})
	return file_dict_service_v1_dict_proto_rawDescData
}

var file_dict_service_v1_dict_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_dict_service_v1_dict_proto_goTypes = []any{
	(*DictType)(nil),               // 0: dict.service.v1.DictType
	(*DictEntry)(nil),              // 1: dict.service.v1.DictEntry
	(*ListDictTypeResponse)(nil),   // 2: dict.service.v1.ListDictTypeResponse
	(*GetDictTypeRequest)(nil),     // 3: dict.service.v1.GetDictTypeRequest
	(*CreateDictTypeRequest)(nil),  // 4: dict.service.v1.CreateDictTypeRequest
	(*UpdateDictTypeRequest)(nil),  // 5: dict.service.v1.UpdateDictTypeRequest
	(*BatchDeleteDictRequest)(nil), // 6: dict.service.v1.BatchDeleteDictRequest
	(*ListDictEntryResponse)(nil),  // 7: dict.service.v1.ListDictEntryResponse
	(*CreateDictEntryRequest)(nil), // 8: dict.service.v1.CreateDictEntryRequest
	(*UpdateDictEntryRequest)(nil), // 9: dict.service.v1.UpdateDictEntryRequest
	(*GetDictEntryRequest)(nil),    // 10: dict.service.v1.GetDictEntryRequest
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),  // 12: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),       // 13: pagination.PagingRequest
	(*emptypb.Empty)(nil),          // 14: google.protobuf.Empty
}
var file_dict_service_v1_dict_proto_depIdxs = []int32{
	11, // 0: dict.service.v1.DictType.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: dict.service.v1.DictType.updated_at:type_name -> google.protobuf.Timestamp
	11, // 2: dict.service.v1.DictType.deleted_at:type_name -> google.protobuf.Timestamp
	11, // 3: dict.service.v1.DictEntry.created_at:type_name -> google.protobuf.Timestamp
	11, // 4: dict.service.v1.DictEntry.updated_at:type_name -> google.protobuf.Timestamp
	11, // 5: dict.service.v1.DictEntry.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 6: dict.service.v1.ListDictTypeResponse.items:type_name -> dict.service.v1.DictType
	0,  // 7: dict.service.v1.CreateDictTypeRequest.data:type_name -> dict.service.v1.DictType
	0,  // 8: dict.service.v1.UpdateDictTypeRequest.data:type_name -> dict.service.v1.DictType
	12, // 9: dict.service.v1.UpdateDictTypeRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 10: dict.service.v1.ListDictEntryResponse.items:type_name -> dict.service.v1.DictEntry
	1,  // 11: dict.service.v1.CreateDictEntryRequest.data:type_name -> dict.service.v1.DictEntry
	1,  // 12: dict.service.v1.UpdateDictEntryRequest.data:type_name -> dict.service.v1.DictEntry
	12, // 13: dict.service.v1.UpdateDictEntryRequest.update_mask:type_name -> google.protobuf.FieldMask
	13, // 14: dict.service.v1.DictService.ListDictType:input_type -> pagination.PagingRequest
	3,  // 15: dict.service.v1.DictService.GetDictType:input_type -> dict.service.v1.GetDictTypeRequest
	4,  // 16: dict.service.v1.DictService.CreateDictType:input_type -> dict.service.v1.CreateDictTypeRequest
	5,  // 17: dict.service.v1.DictService.UpdateDictType:input_type -> dict.service.v1.UpdateDictTypeRequest
	6,  // 18: dict.service.v1.DictService.DeleteDictType:input_type -> dict.service.v1.BatchDeleteDictRequest
	13, // 19: dict.service.v1.DictService.ListDictEntry:input_type -> pagination.PagingRequest
	8,  // 20: dict.service.v1.DictService.CreateDictEntry:input_type -> dict.service.v1.CreateDictEntryRequest
	9,  // 21: dict.service.v1.DictService.UpdateDictEntry:input_type -> dict.service.v1.UpdateDictEntryRequest
	6,  // 22: dict.service.v1.DictService.DeleteDictEntry:input_type -> dict.service.v1.BatchDeleteDictRequest
	2,  // 23: dict.service.v1.DictService.ListDictType:output_type -> dict.service.v1.ListDictTypeResponse
	0,  // 24: dict.service.v1.DictService.GetDictType:output_type -> dict.service.v1.DictType
	14, // 25: dict.service.v1.DictService.CreateDictType:output_type -> google.protobuf.Empty
	14, // 26: dict.service.v1.DictService.UpdateDictType:output_type -> google.protobuf.Empty
	14, // 27: dict.service.v1.DictService.DeleteDictType:output_type -> google.protobuf.Empty
	7,  // 28: dict.service.v1.DictService.ListDictEntry:output_type -> dict.service.v1.ListDictEntryResponse
	14, // 29: dict.service.v1.DictService.CreateDictEntry:output_type -> google.protobuf.Empty
	14, // 30: dict.service.v1.DictService.UpdateDictEntry:output_type -> google.protobuf.Empty
	14, // 31: dict.service.v1.DictService.DeleteDictEntry:output_type -> google.protobuf.Empty
	23, // [23:32] is the sub-list for method output_type
	14, // [14:23] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_dict_service_v1_dict_proto_init() }
func file_dict_service_v1_dict_proto_init() {
	if File_dict_service_v1_dict_proto != nil {
		return
	}
	file_dict_service_v1_dict_proto_msgTypes[0].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[1].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[3].OneofWrappers = []any{
		(*GetDictTypeRequest_Id)(nil),
		(*GetDictTypeRequest_Code)(nil),
	}
	file_dict_service_v1_dict_proto_msgTypes[5].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[9].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[10].OneofWrappers = []any{
		(*GetDictEntryRequest_Id)(nil),
		(*GetDictEntryRequest_Code)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dict_service_v1_dict_proto_rawDesc), len(file_dict_service_v1_dict_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dict_service_v1_dict_proto_goTypes,
		DependencyIndexes: file_dict_service_v1_dict_proto_depIdxs,
		MessageInfos:      file_dict_service_v1_dict_proto_msgTypes,
	}.Build()
	File_dict_service_v1_dict_proto = out.File
	file_dict_service_v1_dict_proto_goTypes = nil
	file_dict_service_v1_dict_proto_depIdxs = nil
}
