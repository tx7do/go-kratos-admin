// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.8.3
//   protoc               unknown
// source: admin/service/v1/i_task.proto

/* eslint-disable */
import type { Duration } from "../../../google/protobuf/duration.pb";
import type { Empty } from "../../../google/protobuf/empty.pb";
import type { Timestamp } from "../../../google/protobuf/timestamp.pb";
import type { PagingRequest } from "../../../pagination/v1/pagination.pb";

/** 任务选项 */
export interface TaskOption {
  /** 任务最多可以重试的次数 */
  maxRetry?:
    | number
    | null
    | undefined;
  /** 任务超时时间 */
  timeout?:
    | Duration
    | null
    | undefined;
  /** 任务截止时间 */
  deadline?:
    | Timestamp
    | null
    | undefined;
  /** 任务延迟处理时间 */
  processIn?:
    | Duration
    | null
    | undefined;
  /** 任务执行时间点 */
  processAt?:
    | Timestamp
    | null
    | undefined;
  /** 任务唯一锁定时间 */
  uniqueTTL?:
    | Duration
    | null
    | undefined;
  /** 任务结果保留时间 */
  retention?:
    | Duration
    | null
    | undefined;
  /** 任务分组 */
  group?:
    | string
    | null
    | undefined;
  /** 任务唯一标识ID */
  taskID?: string | null | undefined;
}

/** 调度任务 */
export interface Task {
  /** 任务ID */
  id?:
    | number
    | null
    | undefined;
  /** 任务类型 */
  type?:
    | Task_Type
    | null
    | undefined;
  /** 任务执行类型名 */
  typeName?:
    | string
    | null
    | undefined;
  /** 任务数据，以 JSON 格式存储，方便存储不同类型和数量的参数 */
  taskPayload?:
    | string
    | null
    | undefined;
  /** cron表达式 */
  cronSpec?:
    | string
    | null
    | undefined;
  /** 任务选项 */
  taskOptions?:
    | TaskOption
    | null
    | undefined;
  /** 启用/禁用任务 */
  enable?:
    | boolean
    | null
    | undefined;
  /** 备注 */
  remark?:
    | string
    | null
    | undefined;
  /** 创建者ID */
  createdBy?:
    | number
    | null
    | undefined;
  /** 更新者ID */
  updatedBy?:
    | number
    | null
    | undefined;
  /** 删除者用户ID */
  deletedBy?:
    | number
    | null
    | undefined;
  /** 创建时间 */
  createdAt?:
    | Timestamp
    | null
    | undefined;
  /** 更新时间 */
  updatedAt?:
    | Timestamp
    | null
    | undefined;
  /** 删除时间 */
  deletedAt?: Timestamp | null | undefined;
}

/** 调度任务类型 */
export enum Task_Type {
  /** PERIODIC - 周期性任务 */
  PERIODIC = "PERIODIC",
  /** DELAY - 延时任务 */
  DELAY = "DELAY",
  /** WAIT_RESULT - 等待结果 */
  WAIT_RESULT = "WAIT_RESULT",
}

/** 查询调度任务列表 - 回应 */
export interface ListTaskResponse {
  items: Task[];
  total: number;
}

/** 查询调度任务详情 - 请求 */
export interface GetTaskRequest {
  id: number;
}

export interface GetTaskByTypeNameRequest {
  /** 任务执行类型名 */
  typeName: string;
}

/** 创建调度任务 - 请求 */
export interface CreateTaskRequest {
  data: Task | null;
}

/** 更新调度任务 - 请求 */
export interface UpdateTaskRequest {
  data:
    | Task
    | null;
  /** 要更新的字段列表 */
  updateMask:
    | string[]
    | null;
  /** 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。 */
  allowMissing?: boolean | null | undefined;
}

/** 删除调度任务 - 请求 */
export interface DeleteTaskRequest {
  id: number;
}

/** 重启调度任务 - 回应 */
export interface RestartAllTaskResponse {
  count: number;
}

/** 控制调度任务 - 请求 */
export interface ControlTaskRequest {
  /** 控制类型 */
  controlType: ControlTaskRequest_ControlType;
  /** 任务执行类型名 */
  typeName: string;
}

/** 调度任务控制类型 */
export enum ControlTaskRequest_ControlType {
  /** Start - 启动 */
  Start = "Start",
  /** Stop - 停止 */
  Stop = "Stop",
  /** Restart - 重启 */
  Restart = "Restart",
}

/** 任务类型名称列表 - 回应 */
export interface ListTaskTypeNameResponse {
  /** 类型名称列表 */
  typeNames: string[];
}

/** 调度任务管理服务 */
export interface TaskService {
  /** 查询调度任务列表 */
  List(request: PagingRequest): Promise<ListTaskResponse>;
  /** 查询调度任务详情 */
  Get(request: GetTaskRequest): Promise<Task>;
  /** 创建调度任务 */
  Create(request: CreateTaskRequest): Promise<Empty>;
  /** 更新调度任务 */
  Update(request: UpdateTaskRequest): Promise<Empty>;
  /** 删除调度任务 */
  Delete(request: DeleteTaskRequest): Promise<Empty>;
  /** 根据任务类型名称查询调度任务详情 */
  GetTaskByTypeName(request: GetTaskByTypeNameRequest): Promise<Task>;
  /** 任务类型名称列表 */
  ListTaskTypeName(request: Empty): Promise<ListTaskTypeNameResponse>;
  /** 重启所有的调度任务 */
  RestartAllTask(request: Empty): Promise<RestartAllTaskResponse>;
  /** 启动所有的调度任务 */
  StartAllTask(request: Empty): Promise<Empty>;
  /** 停止所有的调度任务 */
  StopAllTask(request: Empty): Promise<Empty>;
  /** 控制调度任务 */
  ControlTask(request: ControlTaskRequest): Promise<Empty>;
}
