// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: user/service/v1/tenant.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 租户状态
type TenantStatus int32

const (
	TenantStatus_TENANT_STATUS_UNSPECIFIED TenantStatus = 0 // 未指定
	TenantStatus_TENANT_STATUS_ON          TenantStatus = 1 // 启用
	TenantStatus_TENANT_STATUS_OFF         TenantStatus = 2 // 禁用
	TenantStatus_TENANT_STATUS_EXPIRED     TenantStatus = 3 // 过期
	TenantStatus_TENANT_STATUS_FREEZE      TenantStatus = 4 // 冻结
)

// Enum value maps for TenantStatus.
var (
	TenantStatus_name = map[int32]string{
		0: "TENANT_STATUS_UNSPECIFIED",
		1: "TENANT_STATUS_ON",
		2: "TENANT_STATUS_OFF",
		3: "TENANT_STATUS_EXPIRED",
		4: "TENANT_STATUS_FREEZE",
	}
	TenantStatus_value = map[string]int32{
		"TENANT_STATUS_UNSPECIFIED": 0,
		"TENANT_STATUS_ON":          1,
		"TENANT_STATUS_OFF":         2,
		"TENANT_STATUS_EXPIRED":     3,
		"TENANT_STATUS_FREEZE":      4,
	}
)

func (x TenantStatus) Enum() *TenantStatus {
	p := new(TenantStatus)
	*p = x
	return p
}

func (x TenantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_user_service_v1_tenant_proto_enumTypes[0].Descriptor()
}

func (TenantStatus) Type() protoreflect.EnumType {
	return &file_user_service_v1_tenant_proto_enumTypes[0]
}

func (x TenantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantStatus.Descriptor instead.
func (TenantStatus) EnumDescriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{0}
}

// 租户类型
type TenantType int32

const (
	TenantType_TENANT_TYPE_UNSPECIFIED TenantType = 0 // 未指定
	TenantType_TENANT_TYPE_TRIAL       TenantType = 1 // 试用
	TenantType_TENANT_TYPE_PAID        TenantType = 2 // 付费
	TenantType_TENANT_TYPE_INTERNAL    TenantType = 3 // 内部
	TenantType_TENANT_TYPE_PARTNER     TenantType = 4 // 合作伙伴
	TenantType_TENANT_TYPE_CUSTOM      TenantType = 5 // 定制
)

// Enum value maps for TenantType.
var (
	TenantType_name = map[int32]string{
		0: "TENANT_TYPE_UNSPECIFIED",
		1: "TENANT_TYPE_TRIAL",
		2: "TENANT_TYPE_PAID",
		3: "TENANT_TYPE_INTERNAL",
		4: "TENANT_TYPE_PARTNER",
		5: "TENANT_TYPE_CUSTOM",
	}
	TenantType_value = map[string]int32{
		"TENANT_TYPE_UNSPECIFIED": 0,
		"TENANT_TYPE_TRIAL":       1,
		"TENANT_TYPE_PAID":        2,
		"TENANT_TYPE_INTERNAL":    3,
		"TENANT_TYPE_PARTNER":     4,
		"TENANT_TYPE_CUSTOM":      5,
	}
)

func (x TenantType) Enum() *TenantType {
	p := new(TenantType)
	*p = x
	return p
}

func (x TenantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_service_v1_tenant_proto_enumTypes[1].Descriptor()
}

func (TenantType) Type() protoreflect.EnumType {
	return &file_user_service_v1_tenant_proto_enumTypes[1]
}

func (x TenantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantType.Descriptor instead.
func (TenantType) EnumDescriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{1}
}

// 租户审核状态
type TenantAuditStatus int32

const (
	TenantAuditStatus_TENANT_AUDIT_STATUS_UNSPECIFIED TenantAuditStatus = 0 // 未指定
	TenantAuditStatus_TENANT_AUDIT_STATUS_PENDING     TenantAuditStatus = 1 // 待审核
	TenantAuditStatus_TENANT_AUDIT_STATUS_APPROVED    TenantAuditStatus = 2 // 审核通过
	TenantAuditStatus_TENANT_AUDIT_STATUS_REJECTED    TenantAuditStatus = 3 // 审核拒绝
)

// Enum value maps for TenantAuditStatus.
var (
	TenantAuditStatus_name = map[int32]string{
		0: "TENANT_AUDIT_STATUS_UNSPECIFIED",
		1: "TENANT_AUDIT_STATUS_PENDING",
		2: "TENANT_AUDIT_STATUS_APPROVED",
		3: "TENANT_AUDIT_STATUS_REJECTED",
	}
	TenantAuditStatus_value = map[string]int32{
		"TENANT_AUDIT_STATUS_UNSPECIFIED": 0,
		"TENANT_AUDIT_STATUS_PENDING":     1,
		"TENANT_AUDIT_STATUS_APPROVED":    2,
		"TENANT_AUDIT_STATUS_REJECTED":    3,
	}
)

func (x TenantAuditStatus) Enum() *TenantAuditStatus {
	p := new(TenantAuditStatus)
	*p = x
	return p
}

func (x TenantAuditStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantAuditStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_user_service_v1_tenant_proto_enumTypes[2].Descriptor()
}

func (TenantAuditStatus) Type() protoreflect.EnumType {
	return &file_user_service_v1_tenant_proto_enumTypes[2]
}

func (x TenantAuditStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantAuditStatus.Descriptor instead.
func (TenantAuditStatus) EnumDescriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{2}
}

// 租户
type Tenant struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                                                             // 租户ID
	Name             *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                                                                          // 租户名称
	Code             *string                `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code,omitempty"`                                                                          // 租户编码
	LogoUrl          *string                `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3,oneof" json:"logo_url,omitempty"`                                                     // 租户logo地址
	Industry         *string                `protobuf:"bytes,5,opt,name=industry,proto3,oneof" json:"industry,omitempty"`                                                                  // 所属行业
	Status           *TenantStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=user.service.v1.TenantStatus,oneof" json:"status,omitempty"`                                   // 租户状态
	Type             *TenantType            `protobuf:"varint,7,opt,name=type,proto3,enum=user.service.v1.TenantType,oneof" json:"type,omitempty"`                                         // 租户类型
	AuditStatus      *TenantAuditStatus     `protobuf:"varint,8,opt,name=audit_status,json=auditStatus,proto3,enum=user.service.v1.TenantAuditStatus,oneof" json:"audit_status,omitempty"` // 审核状态
	Remark           *string                `protobuf:"bytes,9,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                                                                      // 备注
	AdminUserId      *uint32                `protobuf:"varint,10,opt,name=admin_user_id,json=adminUserId,proto3,oneof" json:"admin_user_id,omitempty"`                                     // 管理员用户ID
	AdminUserName    *string                `protobuf:"bytes,11,opt,name=admin_user_name,json=adminUserName,proto3,oneof" json:"admin_user_name,omitempty"`                                // 管理员用户名
	SubscriptionAt   *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=subscription_at,json=subscriptionAt,proto3,oneof" json:"subscription_at,omitempty"`                               // 订阅时间（首次订阅/续费时间，NULL表示未订阅）
	UnsubscribeAt    *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=unsubscribe_at,json=unsubscribeAt,proto3,oneof" json:"unsubscribe_at,omitempty"`                                  // 取消订阅时间（NULL表示未取消）
	ExpiredAt        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=expired_at,json=expiredAt,proto3,oneof" json:"expired_at,omitempty"`                                              // 租户有效期（NULL表示永久，过期后状态自动改为“过期”）
	SubscriptionPlan *string                `protobuf:"bytes,23,opt,name=subscription_plan,json=subscriptionPlan,proto3,oneof" json:"subscription_plan,omitempty"`                         // 订阅套餐（如“企业版1年”“基础版3个月”）
	MemberCount      *int32                 `protobuf:"varint,30,opt,name=member_count,json=memberCount,proto3,oneof" json:"member_count,omitempty"`                                       // 成员数量
	LastLoginTime    *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=last_login_time,json=lastLoginTime,proto3,oneof" json:"last_login_time,omitempty"`                                // 最后登录时间
	LastLoginIp      *string                `protobuf:"bytes,32,opt,name=last_login_ip,json=lastLoginIp,proto3,oneof" json:"last_login_ip,omitempty"`                                      // 最后登录IP
	ParentId         *uint32                `protobuf:"varint,50,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`                                                // 父节点ID
	Children         []*Tenant              `protobuf:"bytes,51,rep,name=children,proto3" json:"children,omitempty"`                                                                       // 子节点树
	CreateBy         *uint32                `protobuf:"varint,100,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`                                               // 创建者ID
	UpdateBy         *uint32                `protobuf:"varint,101,opt,name=update_by,json=updateBy,proto3,oneof" json:"update_by,omitempty"`                                               // 更新者ID
	CreateTime       *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`                                          // 创建时间
	UpdateTime       *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`                                          // 更新时间
	DeleteTime       *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`                                          // 删除时间
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{0}
}

func (x *Tenant) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Tenant) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Tenant) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Tenant) GetLogoUrl() string {
	if x != nil && x.LogoUrl != nil {
		return *x.LogoUrl
	}
	return ""
}

func (x *Tenant) GetIndustry() string {
	if x != nil && x.Industry != nil {
		return *x.Industry
	}
	return ""
}

func (x *Tenant) GetStatus() TenantStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return TenantStatus_TENANT_STATUS_UNSPECIFIED
}

func (x *Tenant) GetType() TenantType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return TenantType_TENANT_TYPE_UNSPECIFIED
}

func (x *Tenant) GetAuditStatus() TenantAuditStatus {
	if x != nil && x.AuditStatus != nil {
		return *x.AuditStatus
	}
	return TenantAuditStatus_TENANT_AUDIT_STATUS_UNSPECIFIED
}

func (x *Tenant) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *Tenant) GetAdminUserId() uint32 {
	if x != nil && x.AdminUserId != nil {
		return *x.AdminUserId
	}
	return 0
}

func (x *Tenant) GetAdminUserName() string {
	if x != nil && x.AdminUserName != nil {
		return *x.AdminUserName
	}
	return ""
}

func (x *Tenant) GetSubscriptionAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubscriptionAt
	}
	return nil
}

func (x *Tenant) GetUnsubscribeAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UnsubscribeAt
	}
	return nil
}

func (x *Tenant) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *Tenant) GetSubscriptionPlan() string {
	if x != nil && x.SubscriptionPlan != nil {
		return *x.SubscriptionPlan
	}
	return ""
}

func (x *Tenant) GetMemberCount() int32 {
	if x != nil && x.MemberCount != nil {
		return *x.MemberCount
	}
	return 0
}

func (x *Tenant) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *Tenant) GetLastLoginIp() string {
	if x != nil && x.LastLoginIp != nil {
		return *x.LastLoginIp
	}
	return ""
}

func (x *Tenant) GetParentId() uint32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *Tenant) GetChildren() []*Tenant {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Tenant) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *Tenant) GetUpdateBy() uint32 {
	if x != nil && x.UpdateBy != nil {
		return *x.UpdateBy
	}
	return 0
}

func (x *Tenant) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Tenant) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Tenant) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

// 租户列表 - 答复
type ListTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Tenant              `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTenantResponse) Reset() {
	*x = ListTenantResponse{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantResponse) ProtoMessage() {}

func (x *ListTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantResponse.ProtoReflect.Descriptor instead.
func (*ListTenantResponse) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{1}
}

func (x *ListTenantResponse) GetItems() []*Tenant {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTenantResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 租户数据 - 请求
type GetTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantRequest) Reset() {
	*x = GetTenantRequest{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantRequest) ProtoMessage() {}

func (x *GetTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantRequest.ProtoReflect.Descriptor instead.
func (*GetTenantRequest) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{2}
}

func (x *GetTenantRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 创建租户 - 请求
type CreateTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Tenant                `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTenantRequest) Reset() {
	*x = CreateTenantRequest{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantRequest) ProtoMessage() {}

func (x *CreateTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantRequest.ProtoReflect.Descriptor instead.
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTenantRequest) GetData() *Tenant {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新租户 -请求
type UpdateTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Tenant                `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTenantRequest) Reset() {
	*x = UpdateTenantRequest{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTenantRequest) ProtoMessage() {}

func (x *UpdateTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTenantRequest.ProtoReflect.Descriptor instead.
func (*UpdateTenantRequest) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTenantRequest) GetData() *Tenant {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateTenantRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateTenantRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 删除租户 - 请求
type DeleteTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTenantRequest) Reset() {
	*x = DeleteTenantRequest{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantRequest) ProtoMessage() {}

func (x *DeleteTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantRequest.ProtoReflect.Descriptor instead.
func (*DeleteTenantRequest) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTenantRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BatchCreateTenantsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Tenant              `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateTenantsRequest) Reset() {
	*x = BatchCreateTenantsRequest{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateTenantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateTenantsRequest) ProtoMessage() {}

func (x *BatchCreateTenantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateTenantsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateTenantsRequest) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{6}
}

func (x *BatchCreateTenantsRequest) GetData() []*Tenant {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCreateTenantsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Tenant              `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateTenantsResponse) Reset() {
	*x = BatchCreateTenantsResponse{}
	mi := &file_user_service_v1_tenant_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateTenantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateTenantsResponse) ProtoMessage() {}

func (x *BatchCreateTenantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_tenant_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateTenantsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateTenantsResponse) Descriptor() ([]byte, []int) {
	return file_user_service_v1_tenant_proto_rawDescGZIP(), []int{7}
}

func (x *BatchCreateTenantsResponse) GetData() []*Tenant {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_user_service_v1_tenant_proto protoreflect.FileDescriptor

const file_user_service_v1_tenant_proto_rawDesc = "" +
	"\n" +
	"\x1cuser/service/v1/tenant.proto\x12\x0fuser.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1epagination/v1/pagination.proto\"\x89\x12\n" +
	"\x06Tenant\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b租户IDH\x00R\x02id\x88\x01\x01\x12+\n" +
	"\x04name\x18\x02 \x01(\tB\x12\xbaG\x0f\x92\x02\f租户名称H\x01R\x04name\x88\x01\x01\x12+\n" +
	"\x04code\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f租户编码H\x02R\x04code\x88\x01\x01\x126\n" +
	"\blogo_url\x18\x04 \x01(\tB\x16\xbaG\x13\x92\x02\x10租户logo地址H\x03R\alogoUrl\x88\x01\x01\x12c\n" +
	"\bindustry\x18\x05 \x01(\tBB\xbaG?\x92\x02<所属行业（如“互联网”“金融”“制造”）H\x04R\bindustry\x88\x01\x01\x12N\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1d.user.service.v1.TenantStatusB\x12\xbaG\x0f\x92\x02\f租户状态H\x05R\x06status\x88\x01\x01\x12H\n" +
	"\x04type\x18\a \x01(\x0e2\x1b.user.service.v1.TenantTypeB\x12\xbaG\x0f\x92\x02\f租户类型H\x06R\x04type\x88\x01\x01\x12^\n" +
	"\faudit_status\x18\b \x01(\x0e2\".user.service.v1.TenantAuditStatusB\x12\xbaG\x0f\x92\x02\f审核状态H\aR\vauditStatus\x88\x01\x01\x12)\n" +
	"\x06remark\x18\t \x01(\tB\f\xbaG\t\x92\x02\x06备注H\bR\x06remark\x88\x01\x01\x12@\n" +
	"\radmin_user_id\x18\n" +
	" \x01(\rB\x17\xbaG\x14\x92\x02\x11管理员用户IDH\tR\vadminUserId\x88\x01\x01\x12E\n" +
	"\x0fadmin_user_name\x18\v \x01(\tB\x18\xbaG\x15\x92\x02\x12管理员用户名H\n" +
	"R\radminUserName\x88\x01\x01\x12\x91\x01\n" +
	"\x0fsubscription_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampBG\xbaGD\x92\x02A订阅时间（首次订阅/续费时间，NULL表示未订阅）H\vR\x0esubscriptionAt\x88\x01\x01\x12`\n" +
	"\x0eunsubscribe_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampB\x18\xbaG\x15\x92\x02\x12取消订阅时间H\fR\runsubscribeAt\x88\x01\x01\x12\x95\x01\n" +
	"\n" +
	"expired_at\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampBU\xbaGR\x92\x02O租户有效期（NULL表示永久，过期后状态自动改为“过期”）H\rR\texpiredAt\x88\x01\x01\x12v\n" +
	"\x11subscription_plan\x18\x17 \x01(\tBD\xbaGA\x92\x02>订阅套餐（如“企业版1年”“基础版3个月”）H\x0eR\x10subscriptionPlan\x88\x01\x01\x12:\n" +
	"\fmember_count\x18\x1e \x01(\x05B\x12\xbaG\x0f\x92\x02\f成员数量H\x0fR\vmemberCount\x88\x01\x01\x12a\n" +
	"\x0flast_login_time\x18\x1f \x01(\v2\x1a.google.protobuf.TimestampB\x18\xbaG\x15\x92\x02\x12最后登录时间H\x10R\rlastLoginTime\x88\x01\x01\x12=\n" +
	"\rlast_login_ip\x18  \x01(\tB\x14\xbaG\x11\x92\x02\x0e最后登录IPH\x11R\vlastLoginIp\x88\x01\x01\x123\n" +
	"\tparent_id\x182 \x01(\rB\x11\xbaG\x0e\x92\x02\v父节点IDH\x12R\bparentId\x88\x01\x01\x12G\n" +
	"\bchildren\x183 \x03(\v2\x17.user.service.v1.TenantB\x12\xbaG\x0f\x92\x02\f子节点树R\bchildren\x123\n" +
	"\tcreate_by\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\x13R\bcreateBy\x88\x01\x01\x123\n" +
	"\tupdate_by\x18e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\x14R\bupdateBy\x88\x01\x01\x12U\n" +
	"\vcreate_time\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\x15R\n" +
	"createTime\x88\x01\x01\x12U\n" +
	"\vupdate_time\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\x16R\n" +
	"updateTime\x88\x01\x01\x12U\n" +
	"\vdelete_time\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\x17R\n" +
	"deleteTime\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nameB\a\n" +
	"\x05_codeB\v\n" +
	"\t_logo_urlB\v\n" +
	"\t_industryB\t\n" +
	"\a_statusB\a\n" +
	"\x05_typeB\x0f\n" +
	"\r_audit_statusB\t\n" +
	"\a_remarkB\x10\n" +
	"\x0e_admin_user_idB\x12\n" +
	"\x10_admin_user_nameB\x12\n" +
	"\x10_subscription_atB\x11\n" +
	"\x0f_unsubscribe_atB\r\n" +
	"\v_expired_atB\x14\n" +
	"\x12_subscription_planB\x0f\n" +
	"\r_member_countB\x12\n" +
	"\x10_last_login_timeB\x10\n" +
	"\x0e_last_login_ipB\f\n" +
	"\n" +
	"_parent_idB\f\n" +
	"\n" +
	"_create_byB\f\n" +
	"\n" +
	"_update_byB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_timeB\x0e\n" +
	"\f_delete_time\"Y\n" +
	"\x12ListTenantResponse\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.user.service.v1.TenantR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"\"\n" +
	"\x10GetTenantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"B\n" +
	"\x13CreateTenantRequest\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.user.service.v1.TenantR\x04data\"\x80\x03\n" +
	"\x13UpdateTenantRequest\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.user.service.v1.TenantR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"%\n" +
	"\x13DeleteTenantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"H\n" +
	"\x19BatchCreateTenantsRequest\x12+\n" +
	"\x04data\x18\x01 \x03(\v2\x17.user.service.v1.TenantR\x04data\"I\n" +
	"\x1aBatchCreateTenantsResponse\x12+\n" +
	"\x04data\x18\x01 \x03(\v2\x17.user.service.v1.TenantR\x04data*\x8f\x01\n" +
	"\fTenantStatus\x12\x1d\n" +
	"\x19TENANT_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TENANT_STATUS_ON\x10\x01\x12\x15\n" +
	"\x11TENANT_STATUS_OFF\x10\x02\x12\x19\n" +
	"\x15TENANT_STATUS_EXPIRED\x10\x03\x12\x18\n" +
	"\x14TENANT_STATUS_FREEZE\x10\x04*\xa1\x01\n" +
	"\n" +
	"TenantType\x12\x1b\n" +
	"\x17TENANT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TENANT_TYPE_TRIAL\x10\x01\x12\x14\n" +
	"\x10TENANT_TYPE_PAID\x10\x02\x12\x18\n" +
	"\x14TENANT_TYPE_INTERNAL\x10\x03\x12\x17\n" +
	"\x13TENANT_TYPE_PARTNER\x10\x04\x12\x16\n" +
	"\x12TENANT_TYPE_CUSTOM\x10\x05*\x9d\x01\n" +
	"\x11TenantAuditStatus\x12#\n" +
	"\x1fTENANT_AUDIT_STATUS_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bTENANT_AUDIT_STATUS_PENDING\x10\x01\x12 \n" +
	"\x1cTENANT_AUDIT_STATUS_APPROVED\x10\x02\x12 \n" +
	"\x1cTENANT_AUDIT_STATUS_REJECTED\x10\x032\xe6\x03\n" +
	"\rTenantService\x12H\n" +
	"\x04List\x12\x19.pagination.PagingRequest\x1a#.user.service.v1.ListTenantResponse\"\x00\x12C\n" +
	"\x03Get\x12!.user.service.v1.GetTenantRequest\x1a\x17.user.service.v1.Tenant\"\x00\x12H\n" +
	"\x06Create\x12$.user.service.v1.CreateTenantRequest\x1a\x16.google.protobuf.Empty\"\x00\x12H\n" +
	"\x06Update\x12$.user.service.v1.UpdateTenantRequest\x1a\x16.google.protobuf.Empty\"\x00\x12H\n" +
	"\x06Delete\x12$.user.service.v1.DeleteTenantRequest\x1a\x16.google.protobuf.Empty\"\x00\x12h\n" +
	"\vBatchCreate\x12*.user.service.v1.BatchCreateTenantsRequest\x1a+.user.service.v1.BatchCreateTenantsResponse\"\x00B\xb3\x01\n" +
	"\x13com.user.service.v1B\vTenantProtoP\x01Z1kratos-admin/api/gen/go/user/service/v1;servicev1\xa2\x02\x03USX\xaa\x02\x0fUser.Service.V1\xca\x02\x0fUser\\Service\\V1\xe2\x02\x1bUser\\Service\\V1\\GPBMetadata\xea\x02\x11User::Service::V1b\x06proto3"

var (
	file_user_service_v1_tenant_proto_rawDescOnce sync.Once
	file_user_service_v1_tenant_proto_rawDescData []byte
)

func file_user_service_v1_tenant_proto_rawDescGZIP() []byte {
	file_user_service_v1_tenant_proto_rawDescOnce.Do(func() {
		file_user_service_v1_tenant_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_service_v1_tenant_proto_rawDesc), len(file_user_service_v1_tenant_proto_rawDesc)))
	})
	return file_user_service_v1_tenant_proto_rawDescData
}

var file_user_service_v1_tenant_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_user_service_v1_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_user_service_v1_tenant_proto_goTypes = []any{
	(TenantStatus)(0),                  // 0: user.service.v1.TenantStatus
	(TenantType)(0),                    // 1: user.service.v1.TenantType
	(TenantAuditStatus)(0),             // 2: user.service.v1.TenantAuditStatus
	(*Tenant)(nil),                     // 3: user.service.v1.Tenant
	(*ListTenantResponse)(nil),         // 4: user.service.v1.ListTenantResponse
	(*GetTenantRequest)(nil),           // 5: user.service.v1.GetTenantRequest
	(*CreateTenantRequest)(nil),        // 6: user.service.v1.CreateTenantRequest
	(*UpdateTenantRequest)(nil),        // 7: user.service.v1.UpdateTenantRequest
	(*DeleteTenantRequest)(nil),        // 8: user.service.v1.DeleteTenantRequest
	(*BatchCreateTenantsRequest)(nil),  // 9: user.service.v1.BatchCreateTenantsRequest
	(*BatchCreateTenantsResponse)(nil), // 10: user.service.v1.BatchCreateTenantsResponse
	(*timestamppb.Timestamp)(nil),      // 11: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),      // 12: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),           // 13: pagination.PagingRequest
	(*emptypb.Empty)(nil),              // 14: google.protobuf.Empty
}
var file_user_service_v1_tenant_proto_depIdxs = []int32{
	0,  // 0: user.service.v1.Tenant.status:type_name -> user.service.v1.TenantStatus
	1,  // 1: user.service.v1.Tenant.type:type_name -> user.service.v1.TenantType
	2,  // 2: user.service.v1.Tenant.audit_status:type_name -> user.service.v1.TenantAuditStatus
	11, // 3: user.service.v1.Tenant.subscription_at:type_name -> google.protobuf.Timestamp
	11, // 4: user.service.v1.Tenant.unsubscribe_at:type_name -> google.protobuf.Timestamp
	11, // 5: user.service.v1.Tenant.expired_at:type_name -> google.protobuf.Timestamp
	11, // 6: user.service.v1.Tenant.last_login_time:type_name -> google.protobuf.Timestamp
	3,  // 7: user.service.v1.Tenant.children:type_name -> user.service.v1.Tenant
	11, // 8: user.service.v1.Tenant.create_time:type_name -> google.protobuf.Timestamp
	11, // 9: user.service.v1.Tenant.update_time:type_name -> google.protobuf.Timestamp
	11, // 10: user.service.v1.Tenant.delete_time:type_name -> google.protobuf.Timestamp
	3,  // 11: user.service.v1.ListTenantResponse.items:type_name -> user.service.v1.Tenant
	3,  // 12: user.service.v1.CreateTenantRequest.data:type_name -> user.service.v1.Tenant
	3,  // 13: user.service.v1.UpdateTenantRequest.data:type_name -> user.service.v1.Tenant
	12, // 14: user.service.v1.UpdateTenantRequest.update_mask:type_name -> google.protobuf.FieldMask
	3,  // 15: user.service.v1.BatchCreateTenantsRequest.data:type_name -> user.service.v1.Tenant
	3,  // 16: user.service.v1.BatchCreateTenantsResponse.data:type_name -> user.service.v1.Tenant
	13, // 17: user.service.v1.TenantService.List:input_type -> pagination.PagingRequest
	5,  // 18: user.service.v1.TenantService.Get:input_type -> user.service.v1.GetTenantRequest
	6,  // 19: user.service.v1.TenantService.Create:input_type -> user.service.v1.CreateTenantRequest
	7,  // 20: user.service.v1.TenantService.Update:input_type -> user.service.v1.UpdateTenantRequest
	8,  // 21: user.service.v1.TenantService.Delete:input_type -> user.service.v1.DeleteTenantRequest
	9,  // 22: user.service.v1.TenantService.BatchCreate:input_type -> user.service.v1.BatchCreateTenantsRequest
	4,  // 23: user.service.v1.TenantService.List:output_type -> user.service.v1.ListTenantResponse
	3,  // 24: user.service.v1.TenantService.Get:output_type -> user.service.v1.Tenant
	14, // 25: user.service.v1.TenantService.Create:output_type -> google.protobuf.Empty
	14, // 26: user.service.v1.TenantService.Update:output_type -> google.protobuf.Empty
	14, // 27: user.service.v1.TenantService.Delete:output_type -> google.protobuf.Empty
	10, // 28: user.service.v1.TenantService.BatchCreate:output_type -> user.service.v1.BatchCreateTenantsResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_user_service_v1_tenant_proto_init() }
func file_user_service_v1_tenant_proto_init() {
	if File_user_service_v1_tenant_proto != nil {
		return
	}
	file_user_service_v1_tenant_proto_msgTypes[0].OneofWrappers = []any{}
	file_user_service_v1_tenant_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_service_v1_tenant_proto_rawDesc), len(file_user_service_v1_tenant_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_service_v1_tenant_proto_goTypes,
		DependencyIndexes: file_user_service_v1_tenant_proto_depIdxs,
		EnumInfos:         file_user_service_v1_tenant_proto_enumTypes,
		MessageInfos:      file_user_service_v1_tenant_proto_msgTypes,
	}.Build()
	File_user_service_v1_tenant_proto = out.File
	file_user_service_v1_tenant_proto_goTypes = nil
	file_user_service_v1_tenant_proto_depIdxs = nil
}
