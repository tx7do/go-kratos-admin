// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dict/service/v1/language.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 语言
type Language struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                        // 语言ID
	LanguageCode  *string                `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3,oneof" json:"language_code,omitempty"` // 标准语言代码
	LanguageName  *string                `protobuf:"bytes,3,opt,name=language_name,json=languageName,proto3,oneof" json:"language_name,omitempty"` // 语言名称
	NativeName    *string                `protobuf:"bytes,4,opt,name=native_name,json=nativeName,proto3,oneof" json:"native_name,omitempty"`       // 本地语言名称
	IsDefault     *bool                  `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3,oneof" json:"is_default,omitempty"`         // 是否为默认语言
	IsEnabled     *bool                  `protobuf:"varint,6,opt,name=is_enabled,json=isEnabled,proto3,oneof" json:"is_enabled,omitempty"`         // 是否启用
	CreatedBy     *uint32                `protobuf:"varint,100,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"`       // 创建者ID
	UpdatedBy     *uint32                `protobuf:"varint,101,opt,name=updated_by,json=updatedBy,proto3,oneof" json:"updated_by,omitempty"`       // 更新者ID
	DeletedBy     *uint32                `protobuf:"varint,102,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`       // 删除者用户ID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`        // 创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`        // 更新时间
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`        // 删除时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_dict_service_v1_language_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{0}
}

func (x *Language) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Language) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *Language) GetLanguageName() string {
	if x != nil && x.LanguageName != nil {
		return *x.LanguageName
	}
	return ""
}

func (x *Language) GetNativeName() string {
	if x != nil && x.NativeName != nil {
		return *x.NativeName
	}
	return ""
}

func (x *Language) GetIsDefault() bool {
	if x != nil && x.IsDefault != nil {
		return *x.IsDefault
	}
	return false
}

func (x *Language) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *Language) GetCreatedBy() uint32 {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return 0
}

func (x *Language) GetUpdatedBy() uint32 {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return 0
}

func (x *Language) GetDeletedBy() uint32 {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return 0
}

func (x *Language) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Language) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Language) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// 语言列表 - 答复
type ListLanguageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Language            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLanguageResponse) Reset() {
	*x = ListLanguageResponse{}
	mi := &file_dict_service_v1_language_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLanguageResponse) ProtoMessage() {}

func (x *ListLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLanguageResponse.ProtoReflect.Descriptor instead.
func (*ListLanguageResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{1}
}

func (x *ListLanguageResponse) GetItems() []*Language {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListLanguageResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 语言数据 - 请求
type GetLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguageRequest) Reset() {
	*x = GetLanguageRequest{}
	mi := &file_dict_service_v1_language_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageRequest) ProtoMessage() {}

func (x *GetLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{2}
}

func (x *GetLanguageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 创建语言 - 请求
type CreateLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Language              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLanguageRequest) Reset() {
	*x = CreateLanguageRequest{}
	mi := &file_dict_service_v1_language_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLanguageRequest) ProtoMessage() {}

func (x *CreateLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLanguageRequest.ProtoReflect.Descriptor instead.
func (*CreateLanguageRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLanguageRequest) GetData() *Language {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新语言 - 请求
type UpdateLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Language              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLanguageRequest) Reset() {
	*x = UpdateLanguageRequest{}
	mi := &file_dict_service_v1_language_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageRequest) ProtoMessage() {}

func (x *UpdateLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageRequest.ProtoReflect.Descriptor instead.
func (*UpdateLanguageRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLanguageRequest) GetData() *Language {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateLanguageRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateLanguageRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 删除语言 - 请求
type DeleteLanguageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLanguageRequest) Reset() {
	*x = DeleteLanguageRequest{}
	mi := &file_dict_service_v1_language_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLanguageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLanguageRequest) ProtoMessage() {}

func (x *DeleteLanguageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLanguageRequest.ProtoReflect.Descriptor instead.
func (*DeleteLanguageRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLanguageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BatchCreateLanguagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Language            `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateLanguagesRequest) Reset() {
	*x = BatchCreateLanguagesRequest{}
	mi := &file_dict_service_v1_language_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateLanguagesRequest) ProtoMessage() {}

func (x *BatchCreateLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateLanguagesRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{6}
}

func (x *BatchCreateLanguagesRequest) GetData() []*Language {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCreateLanguagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedIds    []int32                `protobuf:"varint,1,rep,packed,name=created_ids,json=createdIds,proto3" json:"created_ids,omitempty"` // 创建成功的语言ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateLanguagesResponse) Reset() {
	*x = BatchCreateLanguagesResponse{}
	mi := &file_dict_service_v1_language_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateLanguagesResponse) ProtoMessage() {}

func (x *BatchCreateLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_language_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateLanguagesResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_language_proto_rawDescGZIP(), []int{7}
}

func (x *BatchCreateLanguagesResponse) GetCreatedIds() []int32 {
	if x != nil {
		return x.CreatedIds
	}
	return nil
}

var File_dict_service_v1_language_proto protoreflect.FileDescriptor

const file_dict_service_v1_language_proto_rawDesc = "" +
	"\n" +
	"\x1edict/service/v1/language.proto\x12\x0fdict.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1epagination/v1/pagination.proto\"\xc7\a\n" +
	"\bLanguage\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b语言IDH\x00R\x02id\x88\x01\x01\x12B\n" +
	"\rlanguage_code\x18\x02 \x01(\tB\x18\xbaG\x15\x92\x02\x12标准语言代码H\x01R\flanguageCode\x88\x01\x01\x12<\n" +
	"\rlanguage_name\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f语言名称H\x02R\flanguageName\x88\x01\x01\x12>\n" +
	"\vnative_name\x18\x04 \x01(\tB\x18\xbaG\x15\x92\x02\x12本地语言名称H\x03R\n" +
	"nativeName\x88\x01\x01\x12?\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bB\x1b\xbaG\x18\x92\x02\x15是否为默认语言H\x04R\tisDefault\x88\x01\x01\x126\n" +
	"\n" +
	"is_enabled\x18\x06 \x01(\bB\x12\xbaG\x0f\x92\x02\f是否启用H\x05R\tisEnabled\x88\x01\x01\x125\n" +
	"\n" +
	"created_by\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\x06R\tcreatedBy\x88\x01\x01\x125\n" +
	"\n" +
	"updated_by\x18e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\aR\tupdatedBy\x88\x01\x01\x12;\n" +
	"\n" +
	"deleted_by\x18f \x01(\rB\x17\xbaG\x14\x92\x02\x11删除者用户IDH\bR\tdeletedBy\x88\x01\x01\x12S\n" +
	"\n" +
	"created_at\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\tR\tcreatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"updated_at\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\n" +
	"R\tupdatedAt\x88\x01\x01\x12S\n" +
	"\n" +
	"deleted_at\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\vR\tdeletedAt\x88\x01\x01B\x05\n" +
	"\x03_idB\x10\n" +
	"\x0e_language_codeB\x10\n" +
	"\x0e_language_nameB\x0e\n" +
	"\f_native_nameB\r\n" +
	"\v_is_defaultB\r\n" +
	"\v_is_enabledB\r\n" +
	"\v_created_byB\r\n" +
	"\v_updated_byB\r\n" +
	"\v_deleted_byB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atB\r\n" +
	"\v_deleted_at\"]\n" +
	"\x14ListLanguageResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.dict.service.v1.LanguageR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"$\n" +
	"\x12GetLanguageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"F\n" +
	"\x15CreateLanguageRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.LanguageR\x04data\"\x84\x03\n" +
	"\x15UpdateLanguageRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.LanguageR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"'\n" +
	"\x15DeleteLanguageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"L\n" +
	"\x1bBatchCreateLanguagesRequest\x12-\n" +
	"\x04data\x18\x01 \x03(\v2\x19.dict.service.v1.LanguageR\x04data\"d\n" +
	"\x1cBatchCreateLanguagesResponse\x12D\n" +
	"\vcreated_ids\x18\x01 \x03(\x05B#\xbaG \x92\x02\x1d创建成功的语言ID列表R\n" +
	"createdIds2\xe9\x03\n" +
	"\x0fLanguageService\x12R\n" +
	"\fListLanguage\x12\x19.pagination.PagingRequest\x1a%.dict.service.v1.ListLanguageResponse\"\x00\x12G\n" +
	"\x03Get\x12#.dict.service.v1.GetLanguageRequest\x1a\x19.dict.service.v1.Language\"\x00\x12J\n" +
	"\x06Create\x12&.dict.service.v1.CreateLanguageRequest\x1a\x16.google.protobuf.Empty\"\x00\x12J\n" +
	"\x06Update\x12&.dict.service.v1.UpdateLanguageRequest\x1a\x16.google.protobuf.Empty\"\x00\x12J\n" +
	"\x06Delete\x12&.dict.service.v1.DeleteLanguageRequest\x1a\x16.google.protobuf.Empty\"\x00\x12U\n" +
	"\vBatchCreate\x12,.dict.service.v1.BatchCreateLanguagesRequest\x1a\x16.google.protobuf.Empty\"\x00B\xb5\x01\n" +
	"\x13com.dict.service.v1B\rLanguageProtoP\x01Z1kratos-admin/api/gen/go/dict/service/v1;servicev1\xa2\x02\x03DSX\xaa\x02\x0fDict.Service.V1\xca\x02\x0fDict\\Service\\V1\xe2\x02\x1bDict\\Service\\V1\\GPBMetadata\xea\x02\x11Dict::Service::V1b\x06proto3"

var (
	file_dict_service_v1_language_proto_rawDescOnce sync.Once
	file_dict_service_v1_language_proto_rawDescData []byte
)

func file_dict_service_v1_language_proto_rawDescGZIP() []byte {
	file_dict_service_v1_language_proto_rawDescOnce.Do(func() {
		file_dict_service_v1_language_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dict_service_v1_language_proto_rawDesc), len(file_dict_service_v1_language_proto_rawDesc)))
	})
	return file_dict_service_v1_language_proto_rawDescData
}

var file_dict_service_v1_language_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dict_service_v1_language_proto_goTypes = []any{
	(*Language)(nil),                     // 0: dict.service.v1.Language
	(*ListLanguageResponse)(nil),         // 1: dict.service.v1.ListLanguageResponse
	(*GetLanguageRequest)(nil),           // 2: dict.service.v1.GetLanguageRequest
	(*CreateLanguageRequest)(nil),        // 3: dict.service.v1.CreateLanguageRequest
	(*UpdateLanguageRequest)(nil),        // 4: dict.service.v1.UpdateLanguageRequest
	(*DeleteLanguageRequest)(nil),        // 5: dict.service.v1.DeleteLanguageRequest
	(*BatchCreateLanguagesRequest)(nil),  // 6: dict.service.v1.BatchCreateLanguagesRequest
	(*BatchCreateLanguagesResponse)(nil), // 7: dict.service.v1.BatchCreateLanguagesResponse
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),        // 9: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),             // 10: pagination.PagingRequest
	(*emptypb.Empty)(nil),                // 11: google.protobuf.Empty
}
var file_dict_service_v1_language_proto_depIdxs = []int32{
	8,  // 0: dict.service.v1.Language.created_at:type_name -> google.protobuf.Timestamp
	8,  // 1: dict.service.v1.Language.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 2: dict.service.v1.Language.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 3: dict.service.v1.ListLanguageResponse.items:type_name -> dict.service.v1.Language
	0,  // 4: dict.service.v1.CreateLanguageRequest.data:type_name -> dict.service.v1.Language
	0,  // 5: dict.service.v1.UpdateLanguageRequest.data:type_name -> dict.service.v1.Language
	9,  // 6: dict.service.v1.UpdateLanguageRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 7: dict.service.v1.BatchCreateLanguagesRequest.data:type_name -> dict.service.v1.Language
	10, // 8: dict.service.v1.LanguageService.ListLanguage:input_type -> pagination.PagingRequest
	2,  // 9: dict.service.v1.LanguageService.Get:input_type -> dict.service.v1.GetLanguageRequest
	3,  // 10: dict.service.v1.LanguageService.Create:input_type -> dict.service.v1.CreateLanguageRequest
	4,  // 11: dict.service.v1.LanguageService.Update:input_type -> dict.service.v1.UpdateLanguageRequest
	5,  // 12: dict.service.v1.LanguageService.Delete:input_type -> dict.service.v1.DeleteLanguageRequest
	6,  // 13: dict.service.v1.LanguageService.BatchCreate:input_type -> dict.service.v1.BatchCreateLanguagesRequest
	1,  // 14: dict.service.v1.LanguageService.ListLanguage:output_type -> dict.service.v1.ListLanguageResponse
	0,  // 15: dict.service.v1.LanguageService.Get:output_type -> dict.service.v1.Language
	11, // 16: dict.service.v1.LanguageService.Create:output_type -> google.protobuf.Empty
	11, // 17: dict.service.v1.LanguageService.Update:output_type -> google.protobuf.Empty
	11, // 18: dict.service.v1.LanguageService.Delete:output_type -> google.protobuf.Empty
	11, // 19: dict.service.v1.LanguageService.BatchCreate:output_type -> google.protobuf.Empty
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dict_service_v1_language_proto_init() }
func file_dict_service_v1_language_proto_init() {
	if File_dict_service_v1_language_proto != nil {
		return
	}
	file_dict_service_v1_language_proto_msgTypes[0].OneofWrappers = []any{}
	file_dict_service_v1_language_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dict_service_v1_language_proto_rawDesc), len(file_dict_service_v1_language_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dict_service_v1_language_proto_goTypes,
		DependencyIndexes: file_dict_service_v1_language_proto_depIdxs,
		MessageInfos:      file_dict_service_v1_language_proto_msgTypes,
	}.Build()
	File_dict_service_v1_language_proto = out.File
	file_dict_service_v1_language_proto_goTypes = nil
	file_dict_service_v1_language_proto_depIdxs = nil
}
