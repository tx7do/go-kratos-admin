// Code generated by ent, DO NOT EDIT.

package ent

import (
	"kratos-admin/app/admin/service/internal/data/ent/adminloginlog"
	"kratos-admin/app/admin/service/internal/data/ent/adminloginrestriction"
	"kratos-admin/app/admin/service/internal/data/ent/adminoperationlog"
	"kratos-admin/app/admin/service/internal/data/ent/apiresource"
	"kratos-admin/app/admin/service/internal/data/ent/department"
	"kratos-admin/app/admin/service/internal/data/ent/dictentry"
	"kratos-admin/app/admin/service/internal/data/ent/dicttype"
	"kratos-admin/app/admin/service/internal/data/ent/file"
	"kratos-admin/app/admin/service/internal/data/ent/language"
	"kratos-admin/app/admin/service/internal/data/ent/menu"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessage"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessagecategory"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessagerecipient"
	"kratos-admin/app/admin/service/internal/data/ent/organization"
	"kratos-admin/app/admin/service/internal/data/ent/position"
	"kratos-admin/app/admin/service/internal/data/ent/privatemessage"
	"kratos-admin/app/admin/service/internal/data/ent/role"
	"kratos-admin/app/admin/service/internal/data/ent/roleapi"
	"kratos-admin/app/admin/service/internal/data/ent/roledept"
	"kratos-admin/app/admin/service/internal/data/ent/rolemenu"
	"kratos-admin/app/admin/service/internal/data/ent/roleorg"
	"kratos-admin/app/admin/service/internal/data/ent/roleposition"
	"kratos-admin/app/admin/service/internal/data/ent/schema"
	"kratos-admin/app/admin/service/internal/data/ent/task"
	"kratos-admin/app/admin/service/internal/data/ent/tenant"
	"kratos-admin/app/admin/service/internal/data/ent/user"
	"kratos-admin/app/admin/service/internal/data/ent/usercredential"
	"kratos-admin/app/admin/service/internal/data/ent/userposition"
	"kratos-admin/app/admin/service/internal/data/ent/userrole"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminloginlogMixin := schema.AdminLoginLog{}.Mixin()
	adminloginlogMixinFields0 := adminloginlogMixin[0].Fields()
	_ = adminloginlogMixinFields0
	adminloginlogFields := schema.AdminLoginLog{}.Fields()
	_ = adminloginlogFields
	// adminloginlogDescID is the schema descriptor for id field.
	adminloginlogDescID := adminloginlogMixinFields0[0].Descriptor()
	// adminloginlog.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminloginlog.IDValidator = adminloginlogDescID.Validators[0].(func(uint32) error)
	adminloginrestrictionMixin := schema.AdminLoginRestriction{}.Mixin()
	adminloginrestrictionMixinFields0 := adminloginrestrictionMixin[0].Fields()
	_ = adminloginrestrictionMixinFields0
	adminloginrestrictionFields := schema.AdminLoginRestriction{}.Fields()
	_ = adminloginrestrictionFields
	// adminloginrestrictionDescID is the schema descriptor for id field.
	adminloginrestrictionDescID := adminloginrestrictionMixinFields0[0].Descriptor()
	// adminloginrestriction.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminloginrestriction.IDValidator = adminloginrestrictionDescID.Validators[0].(func(uint32) error)
	adminoperationlogMixin := schema.AdminOperationLog{}.Mixin()
	adminoperationlogMixinFields0 := adminoperationlogMixin[0].Fields()
	_ = adminoperationlogMixinFields0
	adminoperationlogFields := schema.AdminOperationLog{}.Fields()
	_ = adminoperationlogFields
	// adminoperationlogDescID is the schema descriptor for id field.
	adminoperationlogDescID := adminoperationlogMixinFields0[0].Descriptor()
	// adminoperationlog.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminoperationlog.IDValidator = adminoperationlogDescID.Validators[0].(func(uint32) error)
	apiresourceMixin := schema.ApiResource{}.Mixin()
	apiresourceMixinFields0 := apiresourceMixin[0].Fields()
	_ = apiresourceMixinFields0
	apiresourceFields := schema.ApiResource{}.Fields()
	_ = apiresourceFields
	// apiresourceDescID is the schema descriptor for id field.
	apiresourceDescID := apiresourceMixinFields0[0].Descriptor()
	// apiresource.IDValidator is a validator for the "id" field. It is called by the builders before save.
	apiresource.IDValidator = apiresourceDescID.Validators[0].(func(uint32) error)
	departmentMixin := schema.Department{}.Mixin()
	departmentMixinFields0 := departmentMixin[0].Fields()
	_ = departmentMixinFields0
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescName is the schema descriptor for name field.
	departmentDescName := departmentFields[0].Descriptor()
	// department.NameValidator is a validator for the "name" field. It is called by the builders before save.
	department.NameValidator = departmentDescName.Validators[0].(func(string) error)
	// departmentDescSortOrder is the schema descriptor for sort_order field.
	departmentDescSortOrder := departmentFields[4].Descriptor()
	// department.DefaultSortOrder holds the default value on creation for the sort_order field.
	department.DefaultSortOrder = departmentDescSortOrder.Default.(int32)
	// departmentDescID is the schema descriptor for id field.
	departmentDescID := departmentMixinFields0[0].Descriptor()
	// department.IDValidator is a validator for the "id" field. It is called by the builders before save.
	department.IDValidator = departmentDescID.Validators[0].(func(uint32) error)
	dictentryMixin := schema.DictEntry{}.Mixin()
	dictentryMixinFields0 := dictentryMixin[0].Fields()
	_ = dictentryMixinFields0
	dictentryMixinFields4 := dictentryMixin[4].Fields()
	_ = dictentryMixinFields4
	dictentryMixinFields5 := dictentryMixin[5].Fields()
	_ = dictentryMixinFields5
	dictentryFields := schema.DictEntry{}.Fields()
	_ = dictentryFields
	// dictentryDescSortOrder is the schema descriptor for sort_order field.
	dictentryDescSortOrder := dictentryMixinFields4[0].Descriptor()
	// dictentry.DefaultSortOrder holds the default value on creation for the sort_order field.
	dictentry.DefaultSortOrder = dictentryDescSortOrder.Default.(int32)
	// dictentryDescIsEnabled is the schema descriptor for is_enabled field.
	dictentryDescIsEnabled := dictentryMixinFields5[0].Descriptor()
	// dictentry.DefaultIsEnabled holds the default value on creation for the is_enabled field.
	dictentry.DefaultIsEnabled = dictentryDescIsEnabled.Default.(bool)
	// dictentryDescEntryLabel is the schema descriptor for entry_label field.
	dictentryDescEntryLabel := dictentryFields[0].Descriptor()
	// dictentry.EntryLabelValidator is a validator for the "entry_label" field. It is called by the builders before save.
	dictentry.EntryLabelValidator = dictentryDescEntryLabel.Validators[0].(func(string) error)
	// dictentryDescEntryValue is the schema descriptor for entry_value field.
	dictentryDescEntryValue := dictentryFields[1].Descriptor()
	// dictentry.EntryValueValidator is a validator for the "entry_value" field. It is called by the builders before save.
	dictentry.EntryValueValidator = dictentryDescEntryValue.Validators[0].(func(string) error)
	// dictentryDescID is the schema descriptor for id field.
	dictentryDescID := dictentryMixinFields0[0].Descriptor()
	// dictentry.IDValidator is a validator for the "id" field. It is called by the builders before save.
	dictentry.IDValidator = dictentryDescID.Validators[0].(func(uint32) error)
	dicttypeMixin := schema.DictType{}.Mixin()
	dicttypeMixinFields0 := dicttypeMixin[0].Fields()
	_ = dicttypeMixinFields0
	dicttypeMixinFields3 := dicttypeMixin[3].Fields()
	_ = dicttypeMixinFields3
	dicttypeMixinFields4 := dicttypeMixin[4].Fields()
	_ = dicttypeMixinFields4
	dicttypeFields := schema.DictType{}.Fields()
	_ = dicttypeFields
	// dicttypeDescIsEnabled is the schema descriptor for is_enabled field.
	dicttypeDescIsEnabled := dicttypeMixinFields3[0].Descriptor()
	// dicttype.DefaultIsEnabled holds the default value on creation for the is_enabled field.
	dicttype.DefaultIsEnabled = dicttypeDescIsEnabled.Default.(bool)
	// dicttypeDescSortOrder is the schema descriptor for sort_order field.
	dicttypeDescSortOrder := dicttypeMixinFields4[0].Descriptor()
	// dicttype.DefaultSortOrder holds the default value on creation for the sort_order field.
	dicttype.DefaultSortOrder = dicttypeDescSortOrder.Default.(int32)
	// dicttypeDescTypeCode is the schema descriptor for type_code field.
	dicttypeDescTypeCode := dicttypeFields[0].Descriptor()
	// dicttype.TypeCodeValidator is a validator for the "type_code" field. It is called by the builders before save.
	dicttype.TypeCodeValidator = dicttypeDescTypeCode.Validators[0].(func(string) error)
	// dicttypeDescTypeName is the schema descriptor for type_name field.
	dicttypeDescTypeName := dicttypeFields[1].Descriptor()
	// dicttype.TypeNameValidator is a validator for the "type_name" field. It is called by the builders before save.
	dicttype.TypeNameValidator = dicttypeDescTypeName.Validators[0].(func(string) error)
	// dicttypeDescID is the schema descriptor for id field.
	dicttypeDescID := dicttypeMixinFields0[0].Descriptor()
	// dicttype.IDValidator is a validator for the "id" field. It is called by the builders before save.
	dicttype.IDValidator = dicttypeDescID.Validators[0].(func(uint32) error)
	fileMixin := schema.File{}.Mixin()
	fileMixinFields0 := fileMixin[0].Fields()
	_ = fileMixinFields0
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescID is the schema descriptor for id field.
	fileDescID := fileMixinFields0[0].Descriptor()
	// file.IDValidator is a validator for the "id" field. It is called by the builders before save.
	file.IDValidator = fileDescID.Validators[0].(func(uint32) error)
	languageMixin := schema.Language{}.Mixin()
	languageMixinFields0 := languageMixin[0].Fields()
	_ = languageMixinFields0
	languageMixinFields3 := languageMixin[3].Fields()
	_ = languageMixinFields3
	languageMixinFields4 := languageMixin[4].Fields()
	_ = languageMixinFields4
	languageFields := schema.Language{}.Fields()
	_ = languageFields
	// languageDescSortOrder is the schema descriptor for sort_order field.
	languageDescSortOrder := languageMixinFields3[0].Descriptor()
	// language.DefaultSortOrder holds the default value on creation for the sort_order field.
	language.DefaultSortOrder = languageDescSortOrder.Default.(int32)
	// languageDescIsEnabled is the schema descriptor for is_enabled field.
	languageDescIsEnabled := languageMixinFields4[0].Descriptor()
	// language.DefaultIsEnabled holds the default value on creation for the is_enabled field.
	language.DefaultIsEnabled = languageDescIsEnabled.Default.(bool)
	// languageDescLanguageCode is the schema descriptor for language_code field.
	languageDescLanguageCode := languageFields[0].Descriptor()
	// language.LanguageCodeValidator is a validator for the "language_code" field. It is called by the builders before save.
	language.LanguageCodeValidator = languageDescLanguageCode.Validators[0].(func(string) error)
	// languageDescLanguageName is the schema descriptor for language_name field.
	languageDescLanguageName := languageFields[1].Descriptor()
	// language.LanguageNameValidator is a validator for the "language_name" field. It is called by the builders before save.
	language.LanguageNameValidator = languageDescLanguageName.Validators[0].(func(string) error)
	// languageDescNativeName is the schema descriptor for native_name field.
	languageDescNativeName := languageFields[2].Descriptor()
	// language.NativeNameValidator is a validator for the "native_name" field. It is called by the builders before save.
	language.NativeNameValidator = languageDescNativeName.Validators[0].(func(string) error)
	// languageDescIsDefault is the schema descriptor for is_default field.
	languageDescIsDefault := languageFields[3].Descriptor()
	// language.DefaultIsDefault holds the default value on creation for the is_default field.
	language.DefaultIsDefault = languageDescIsDefault.Default.(bool)
	// languageDescID is the schema descriptor for id field.
	languageDescID := languageMixinFields0[0].Descriptor()
	// language.IDValidator is a validator for the "id" field. It is called by the builders before save.
	language.IDValidator = languageDescID.Validators[0].(func(uint32) error)
	menuMixin := schema.Menu{}.Mixin()
	menuMixinFields0 := menuMixin[0].Fields()
	_ = menuMixinFields0
	menuFields := schema.Menu{}.Fields()
	_ = menuFields
	// menuDescPath is the schema descriptor for path field.
	menuDescPath := menuFields[3].Descriptor()
	// menu.DefaultPath holds the default value on creation for the path field.
	menu.DefaultPath = menuDescPath.Default.(string)
	// menuDescComponent is the schema descriptor for component field.
	menuDescComponent := menuFields[7].Descriptor()
	// menu.DefaultComponent holds the default value on creation for the component field.
	menu.DefaultComponent = menuDescComponent.Default.(string)
	// menuDescID is the schema descriptor for id field.
	menuDescID := menuMixinFields0[0].Descriptor()
	// menu.IDValidator is a validator for the "id" field. It is called by the builders before save.
	menu.IDValidator = menuDescID.Validators[0].(func(uint32) error)
	notificationmessageMixin := schema.NotificationMessage{}.Mixin()
	notificationmessageMixinFields0 := notificationmessageMixin[0].Fields()
	_ = notificationmessageMixinFields0
	notificationmessageFields := schema.NotificationMessage{}.Fields()
	_ = notificationmessageFields
	// notificationmessageDescID is the schema descriptor for id field.
	notificationmessageDescID := notificationmessageMixinFields0[0].Descriptor()
	// notificationmessage.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessage.IDValidator = notificationmessageDescID.Validators[0].(func(uint32) error)
	notificationmessagecategoryMixin := schema.NotificationMessageCategory{}.Mixin()
	notificationmessagecategoryMixinFields0 := notificationmessagecategoryMixin[0].Fields()
	_ = notificationmessagecategoryMixinFields0
	notificationmessagecategoryFields := schema.NotificationMessageCategory{}.Fields()
	_ = notificationmessagecategoryFields
	// notificationmessagecategoryDescName is the schema descriptor for name field.
	notificationmessagecategoryDescName := notificationmessagecategoryFields[0].Descriptor()
	// notificationmessagecategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	notificationmessagecategory.NameValidator = notificationmessagecategoryDescName.Validators[0].(func(string) error)
	// notificationmessagecategoryDescCode is the schema descriptor for code field.
	notificationmessagecategoryDescCode := notificationmessagecategoryFields[1].Descriptor()
	// notificationmessagecategory.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	notificationmessagecategory.CodeValidator = notificationmessagecategoryDescCode.Validators[0].(func(string) error)
	// notificationmessagecategoryDescSortOrder is the schema descriptor for sort_order field.
	notificationmessagecategoryDescSortOrder := notificationmessagecategoryFields[2].Descriptor()
	// notificationmessagecategory.DefaultSortOrder holds the default value on creation for the sort_order field.
	notificationmessagecategory.DefaultSortOrder = notificationmessagecategoryDescSortOrder.Default.(int32)
	// notificationmessagecategoryDescID is the schema descriptor for id field.
	notificationmessagecategoryDescID := notificationmessagecategoryMixinFields0[0].Descriptor()
	// notificationmessagecategory.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessagecategory.IDValidator = notificationmessagecategoryDescID.Validators[0].(func(uint32) error)
	notificationmessagerecipientMixin := schema.NotificationMessageRecipient{}.Mixin()
	notificationmessagerecipientMixinFields0 := notificationmessagerecipientMixin[0].Fields()
	_ = notificationmessagerecipientMixinFields0
	notificationmessagerecipientFields := schema.NotificationMessageRecipient{}.Fields()
	_ = notificationmessagerecipientFields
	// notificationmessagerecipientDescID is the schema descriptor for id field.
	notificationmessagerecipientDescID := notificationmessagerecipientMixinFields0[0].Descriptor()
	// notificationmessagerecipient.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessagerecipient.IDValidator = notificationmessagerecipientDescID.Validators[0].(func(uint32) error)
	organizationMixin := schema.Organization{}.Mixin()
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	// organizationDescSortOrder is the schema descriptor for sort_order field.
	organizationDescSortOrder := organizationFields[2].Descriptor()
	// organization.DefaultSortOrder holds the default value on creation for the sort_order field.
	organization.DefaultSortOrder = organizationDescSortOrder.Default.(int32)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields0[0].Descriptor()
	// organization.IDValidator is a validator for the "id" field. It is called by the builders before save.
	organization.IDValidator = organizationDescID.Validators[0].(func(uint32) error)
	positionMixin := schema.Position{}.Mixin()
	positionMixinFields0 := positionMixin[0].Fields()
	_ = positionMixinFields0
	positionFields := schema.Position{}.Fields()
	_ = positionFields
	// positionDescName is the schema descriptor for name field.
	positionDescName := positionFields[0].Descriptor()
	// position.NameValidator is a validator for the "name" field. It is called by the builders before save.
	position.NameValidator = positionDescName.Validators[0].(func(string) error)
	// positionDescCode is the schema descriptor for code field.
	positionDescCode := positionFields[1].Descriptor()
	// position.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	position.CodeValidator = positionDescCode.Validators[0].(func(string) error)
	// positionDescSortOrder is the schema descriptor for sort_order field.
	positionDescSortOrder := positionFields[3].Descriptor()
	// position.DefaultSortOrder holds the default value on creation for the sort_order field.
	position.DefaultSortOrder = positionDescSortOrder.Default.(int32)
	// positionDescID is the schema descriptor for id field.
	positionDescID := positionMixinFields0[0].Descriptor()
	// position.IDValidator is a validator for the "id" field. It is called by the builders before save.
	position.IDValidator = positionDescID.Validators[0].(func(uint32) error)
	privatemessageMixin := schema.PrivateMessage{}.Mixin()
	privatemessageMixinFields0 := privatemessageMixin[0].Fields()
	_ = privatemessageMixinFields0
	privatemessageFields := schema.PrivateMessage{}.Fields()
	_ = privatemessageFields
	// privatemessageDescID is the schema descriptor for id field.
	privatemessageDescID := privatemessageMixinFields0[0].Descriptor()
	// privatemessage.IDValidator is a validator for the "id" field. It is called by the builders before save.
	privatemessage.IDValidator = privatemessageDescID.Validators[0].(func(uint32) error)
	roleMixin := schema.Role{}.Mixin()
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[0].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescCode is the schema descriptor for code field.
	roleDescCode := roleFields[1].Descriptor()
	// role.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	role.CodeValidator = roleDescCode.Validators[0].(func(string) error)
	// roleDescSortOrder is the schema descriptor for sort_order field.
	roleDescSortOrder := roleFields[3].Descriptor()
	// role.DefaultSortOrder holds the default value on creation for the sort_order field.
	role.DefaultSortOrder = roleDescSortOrder.Default.(int32)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleMixinFields0[0].Descriptor()
	// role.IDValidator is a validator for the "id" field. It is called by the builders before save.
	role.IDValidator = roleDescID.Validators[0].(func(uint32) error)
	roleapiMixin := schema.RoleApi{}.Mixin()
	roleapiMixinFields0 := roleapiMixin[0].Fields()
	_ = roleapiMixinFields0
	roleapiFields := schema.RoleApi{}.Fields()
	_ = roleapiFields
	// roleapiDescID is the schema descriptor for id field.
	roleapiDescID := roleapiMixinFields0[0].Descriptor()
	// roleapi.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleapi.IDValidator = roleapiDescID.Validators[0].(func(uint32) error)
	roledeptMixin := schema.RoleDept{}.Mixin()
	roledeptMixinFields0 := roledeptMixin[0].Fields()
	_ = roledeptMixinFields0
	roledeptFields := schema.RoleDept{}.Fields()
	_ = roledeptFields
	// roledeptDescID is the schema descriptor for id field.
	roledeptDescID := roledeptMixinFields0[0].Descriptor()
	// roledept.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roledept.IDValidator = roledeptDescID.Validators[0].(func(uint32) error)
	rolemenuMixin := schema.RoleMenu{}.Mixin()
	rolemenuMixinFields0 := rolemenuMixin[0].Fields()
	_ = rolemenuMixinFields0
	rolemenuFields := schema.RoleMenu{}.Fields()
	_ = rolemenuFields
	// rolemenuDescID is the schema descriptor for id field.
	rolemenuDescID := rolemenuMixinFields0[0].Descriptor()
	// rolemenu.IDValidator is a validator for the "id" field. It is called by the builders before save.
	rolemenu.IDValidator = rolemenuDescID.Validators[0].(func(uint32) error)
	roleorgMixin := schema.RoleOrg{}.Mixin()
	roleorgMixinFields0 := roleorgMixin[0].Fields()
	_ = roleorgMixinFields0
	roleorgFields := schema.RoleOrg{}.Fields()
	_ = roleorgFields
	// roleorgDescID is the schema descriptor for id field.
	roleorgDescID := roleorgMixinFields0[0].Descriptor()
	// roleorg.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleorg.IDValidator = roleorgDescID.Validators[0].(func(uint32) error)
	rolepositionMixin := schema.RolePosition{}.Mixin()
	rolepositionMixinFields0 := rolepositionMixin[0].Fields()
	_ = rolepositionMixinFields0
	rolepositionFields := schema.RolePosition{}.Fields()
	_ = rolepositionFields
	// rolepositionDescID is the schema descriptor for id field.
	rolepositionDescID := rolepositionMixinFields0[0].Descriptor()
	// roleposition.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleposition.IDValidator = rolepositionDescID.Validators[0].(func(uint32) error)
	taskMixin := schema.Task{}.Mixin()
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskMixinFields0[0].Descriptor()
	// task.IDValidator is a validator for the "id" field. It is called by the builders before save.
	task.IDValidator = taskDescID.Validators[0].(func(uint32) error)
	tenantMixin := schema.Tenant{}.Mixin()
	tenantMixinFields0 := tenantMixin[0].Fields()
	_ = tenantMixinFields0
	tenantFields := schema.Tenant{}.Fields()
	_ = tenantFields
	// tenantDescName is the schema descriptor for name field.
	tenantDescName := tenantFields[0].Descriptor()
	// tenant.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tenant.NameValidator = tenantDescName.Validators[0].(func(string) error)
	// tenantDescCode is the schema descriptor for code field.
	tenantDescCode := tenantFields[1].Descriptor()
	// tenant.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	tenant.CodeValidator = tenantDescCode.Validators[0].(func(string) error)
	// tenantDescID is the schema descriptor for id field.
	tenantDescID := tenantMixinFields0[0].Descriptor()
	// tenant.IDValidator is a validator for the "id" field. It is called by the builders before save.
	tenant.IDValidator = tenantDescID.Validators[0].(func(uint32) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[4].Descriptor()
	// user.DefaultMobile holds the default value on creation for the mobile field.
	user.DefaultMobile = userDescMobile.Default.(string)
	// user.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	user.MobileValidator = userDescMobile.Validators[0].(func(string) error)
	// userDescTelephone is the schema descriptor for telephone field.
	userDescTelephone := userFields[5].Descriptor()
	// user.DefaultTelephone holds the default value on creation for the telephone field.
	user.DefaultTelephone = userDescTelephone.Default.(string)
	// user.TelephoneValidator is a validator for the "telephone" field. It is called by the builders before save.
	user.TelephoneValidator = userDescTelephone.Validators[0].(func(string) error)
	// userDescAddress is the schema descriptor for address field.
	userDescAddress := userFields[7].Descriptor()
	// user.DefaultAddress holds the default value on creation for the address field.
	user.DefaultAddress = userDescAddress.Default.(string)
	// userDescRegion is the schema descriptor for region field.
	userDescRegion := userFields[8].Descriptor()
	// user.DefaultRegion holds the default value on creation for the region field.
	user.DefaultRegion = userDescRegion.Default.(string)
	// userDescDescription is the schema descriptor for description field.
	userDescDescription := userFields[9].Descriptor()
	// user.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	user.DescriptionValidator = userDescDescription.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(uint32) error)
	usercredentialMixin := schema.UserCredential{}.Mixin()
	usercredentialMixinFields1 := usercredentialMixin[1].Fields()
	_ = usercredentialMixinFields1
	usercredentialFields := schema.UserCredential{}.Fields()
	_ = usercredentialFields
	// usercredentialDescIdentifier is the schema descriptor for identifier field.
	usercredentialDescIdentifier := usercredentialFields[2].Descriptor()
	// usercredential.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	usercredential.IdentifierValidator = usercredentialDescIdentifier.Validators[0].(func(string) error)
	// usercredentialDescCredential is the schema descriptor for credential field.
	usercredentialDescCredential := usercredentialFields[4].Descriptor()
	// usercredential.CredentialValidator is a validator for the "credential" field. It is called by the builders before save.
	usercredential.CredentialValidator = usercredentialDescCredential.Validators[0].(func(string) error)
	// usercredentialDescIsPrimary is the schema descriptor for is_primary field.
	usercredentialDescIsPrimary := usercredentialFields[5].Descriptor()
	// usercredential.DefaultIsPrimary holds the default value on creation for the is_primary field.
	usercredential.DefaultIsPrimary = usercredentialDescIsPrimary.Default.(bool)
	// usercredentialDescActivateToken is the schema descriptor for activate_token field.
	usercredentialDescActivateToken := usercredentialFields[8].Descriptor()
	// usercredential.ActivateTokenValidator is a validator for the "activate_token" field. It is called by the builders before save.
	usercredential.ActivateTokenValidator = usercredentialDescActivateToken.Validators[0].(func(string) error)
	// usercredentialDescResetToken is the schema descriptor for reset_token field.
	usercredentialDescResetToken := usercredentialFields[9].Descriptor()
	// usercredential.ResetTokenValidator is a validator for the "reset_token" field. It is called by the builders before save.
	usercredential.ResetTokenValidator = usercredentialDescResetToken.Validators[0].(func(string) error)
	// usercredentialDescID is the schema descriptor for id field.
	usercredentialDescID := usercredentialMixinFields1[0].Descriptor()
	// usercredential.IDValidator is a validator for the "id" field. It is called by the builders before save.
	usercredential.IDValidator = usercredentialDescID.Validators[0].(func(uint32) error)
	userpositionMixin := schema.UserPosition{}.Mixin()
	userpositionMixinFields0 := userpositionMixin[0].Fields()
	_ = userpositionMixinFields0
	userpositionFields := schema.UserPosition{}.Fields()
	_ = userpositionFields
	// userpositionDescID is the schema descriptor for id field.
	userpositionDescID := userpositionMixinFields0[0].Descriptor()
	// userposition.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userposition.IDValidator = userpositionDescID.Validators[0].(func(uint32) error)
	userroleMixin := schema.UserRole{}.Mixin()
	userroleMixinFields0 := userroleMixin[0].Fields()
	_ = userroleMixinFields0
	userroleFields := schema.UserRole{}.Fields()
	_ = userroleFields
	// userroleDescID is the schema descriptor for id field.
	userroleDescID := userroleMixinFields0[0].Descriptor()
	// userrole.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userrole.IDValidator = userroleDescID.Validators[0].(func(uint32) error)
}
