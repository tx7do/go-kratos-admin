// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dict/service/v1/dict.proto

package servicev1

import (
	_ "github.com/google/gnostic/openapiv3"
	v1 "github.com/tx7do/kratos-bootstrap/api/gen/go/pagination/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 主字典状态
type DictMain_Status int32

const (
	DictMain_OFF DictMain_Status = 0 // 禁用
	DictMain_ON  DictMain_Status = 1 // 启用
)

// Enum value maps for DictMain_Status.
var (
	DictMain_Status_name = map[int32]string{
		0: "OFF",
		1: "ON",
	}
	DictMain_Status_value = map[string]int32{
		"OFF": 0,
		"ON":  1,
	}
)

func (x DictMain_Status) Enum() *DictMain_Status {
	p := new(DictMain_Status)
	*p = x
	return p
}

func (x DictMain_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DictMain_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_dict_service_v1_dict_proto_enumTypes[0].Descriptor()
}

func (DictMain_Status) Type() protoreflect.EnumType {
	return &file_dict_service_v1_dict_proto_enumTypes[0]
}

func (x DictMain_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DictMain_Status.Descriptor instead.
func (DictMain_Status) EnumDescriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{0, 0}
}

// 子字典状态
type DictItem_Status int32

const (
	DictItem_OFF DictItem_Status = 0 // 禁用
	DictItem_ON  DictItem_Status = 1 // 启用
)

// Enum value maps for DictItem_Status.
var (
	DictItem_Status_name = map[int32]string{
		0: "OFF",
		1: "ON",
	}
	DictItem_Status_value = map[string]int32{
		"OFF": 0,
		"ON":  1,
	}
)

func (x DictItem_Status) Enum() *DictItem_Status {
	p := new(DictItem_Status)
	*p = x
	return p
}

func (x DictItem_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DictItem_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_dict_service_v1_dict_proto_enumTypes[1].Descriptor()
}

func (DictItem_Status) Type() protoreflect.EnumType {
	return &file_dict_service_v1_dict_proto_enumTypes[1]
}

func (x DictItem_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DictItem_Status.Descriptor instead.
func (DictItem_Status) EnumDescriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{1, 0}
}

// 主字典
type DictMain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                              // 主字典ID
	Code          *string                `protobuf:"bytes,2,opt,name=code,proto3,oneof" json:"code,omitempty"`                                           // 主字典编码
	Name          *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`                                           // 主字典名称
	Status        *DictMain_Status       `protobuf:"varint,4,opt,name=status,proto3,enum=dict.service.v1.DictMain_Status,oneof" json:"status,omitempty"` // 字典状态
	SortId        *int32                 `protobuf:"varint,5,opt,name=sort_id,json=sortId,proto3,oneof" json:"sort_id,omitempty"`                        // 排序编号
	Remark        *string                `protobuf:"bytes,6,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                                       // 备注
	CreateBy      *uint32                `protobuf:"varint,100,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`                // 创建者ID
	UpdateBy      *uint32                `protobuf:"varint,101,opt,name=update_by,json=updateBy,proto3,oneof" json:"update_by,omitempty"`                // 更新者ID
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`           // 创建时间
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`           // 更新时间
	DeleteTime    *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`           // 删除时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DictMain) Reset() {
	*x = DictMain{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DictMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictMain) ProtoMessage() {}

func (x *DictMain) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictMain.ProtoReflect.Descriptor instead.
func (*DictMain) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{0}
}

func (x *DictMain) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DictMain) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *DictMain) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DictMain) GetStatus() DictMain_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return DictMain_OFF
}

func (x *DictMain) GetSortId() int32 {
	if x != nil && x.SortId != nil {
		return *x.SortId
	}
	return 0
}

func (x *DictMain) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *DictMain) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *DictMain) GetUpdateBy() uint32 {
	if x != nil && x.UpdateBy != nil {
		return *x.UpdateBy
	}
	return 0
}

func (x *DictMain) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DictMain) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *DictMain) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

// 子字典
type DictItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                                              // 子项ID
	MainId        *uint32                `protobuf:"varint,2,opt,name=main_id,json=mainId,proto3,oneof" json:"main_id,omitempty"`                        // 主字典ID
	Code          *string                `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code,omitempty"`                                           // 子项编码
	Name          *string                `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`                                           // 子项名称
	Value         *int32                 `protobuf:"varint,5,opt,name=value,proto3,oneof" json:"value,omitempty"`                                        // 数值型标识
	Status        *DictItem_Status       `protobuf:"varint,6,opt,name=status,proto3,enum=dict.service.v1.DictItem_Status,oneof" json:"status,omitempty"` // 字典状态
	SortId        *int32                 `protobuf:"varint,7,opt,name=sort_id,json=sortId,proto3,oneof" json:"sort_id,omitempty"`                        // 排序编号
	Remark        *string                `protobuf:"bytes,8,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                                       // 备注
	CreateBy      *uint32                `protobuf:"varint,100,opt,name=create_by,json=createBy,proto3,oneof" json:"create_by,omitempty"`                // 创建者ID
	UpdateBy      *uint32                `protobuf:"varint,101,opt,name=update_by,json=updateBy,proto3,oneof" json:"update_by,omitempty"`                // 更新者ID
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,200,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`           // 创建时间
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,201,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`           // 更新时间
	DeleteTime    *timestamppb.Timestamp `protobuf:"bytes,202,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`           // 删除时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DictItem) Reset() {
	*x = DictItem{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DictItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItem) ProtoMessage() {}

func (x *DictItem) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItem.ProtoReflect.Descriptor instead.
func (*DictItem) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{1}
}

func (x *DictItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DictItem) GetMainId() uint32 {
	if x != nil && x.MainId != nil {
		return *x.MainId
	}
	return 0
}

func (x *DictItem) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *DictItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DictItem) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *DictItem) GetStatus() DictItem_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return DictItem_OFF
}

func (x *DictItem) GetSortId() int32 {
	if x != nil && x.SortId != nil {
		return *x.SortId
	}
	return 0
}

func (x *DictItem) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *DictItem) GetCreateBy() uint32 {
	if x != nil && x.CreateBy != nil {
		return *x.CreateBy
	}
	return 0
}

func (x *DictItem) GetUpdateBy() uint32 {
	if x != nil && x.UpdateBy != nil {
		return *x.UpdateBy
	}
	return 0
}

func (x *DictItem) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DictItem) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *DictItem) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

// 查询主字典列表 - 回应
type ListDictMainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DictMain            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDictMainResponse) Reset() {
	*x = ListDictMainResponse{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDictMainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictMainResponse) ProtoMessage() {}

func (x *ListDictMainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictMainResponse.ProtoReflect.Descriptor instead.
func (*ListDictMainResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{2}
}

func (x *ListDictMainResponse) GetItems() []*DictMain {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDictMainResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 查询主字典详情 - 请求
type GetDictMainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to QueryBy:
	//
	//	*GetDictMainRequest_Id
	//	*GetDictMainRequest_Code
	QueryBy       isGetDictMainRequest_QueryBy `protobuf_oneof:"query_by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDictMainRequest) Reset() {
	*x = GetDictMainRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDictMainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictMainRequest) ProtoMessage() {}

func (x *GetDictMainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictMainRequest.ProtoReflect.Descriptor instead.
func (*GetDictMainRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{3}
}

func (x *GetDictMainRequest) GetQueryBy() isGetDictMainRequest_QueryBy {
	if x != nil {
		return x.QueryBy
	}
	return nil
}

func (x *GetDictMainRequest) GetId() uint32 {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictMainRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetDictMainRequest) GetCode() string {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictMainRequest_Code); ok {
			return x.Code
		}
	}
	return ""
}

type isGetDictMainRequest_QueryBy interface {
	isGetDictMainRequest_QueryBy()
}

type GetDictMainRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetDictMainRequest_Code struct {
	Code string `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*GetDictMainRequest_Id) isGetDictMainRequest_QueryBy() {}

func (*GetDictMainRequest_Code) isGetDictMainRequest_QueryBy() {}

// 创建主字典 - 请求
type CreateDictMainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictMain              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDictMainRequest) Reset() {
	*x = CreateDictMainRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDictMainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictMainRequest) ProtoMessage() {}

func (x *CreateDictMainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictMainRequest.ProtoReflect.Descriptor instead.
func (*CreateDictMainRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDictMainRequest) GetData() *DictMain {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新主字典 - 请求
type UpdateDictMainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictMain              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDictMainRequest) Reset() {
	*x = UpdateDictMainRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDictMainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictMainRequest) ProtoMessage() {}

func (x *UpdateDictMainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictMainRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictMainRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDictMainRequest) GetData() *DictMain {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateDictMainRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDictMainRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 批量删除字典 - 请求
type BatchDeleteDictRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []uint32               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 要删除的ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteDictRequest) Reset() {
	*x = BatchDeleteDictRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteDictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteDictRequest) ProtoMessage() {}

func (x *BatchDeleteDictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteDictRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteDictRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{6}
}

func (x *BatchDeleteDictRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 查询子字典列表 - 回应
type ListDictItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*DictItem            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDictItemResponse) Reset() {
	*x = ListDictItemResponse{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDictItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDictItemResponse) ProtoMessage() {}

func (x *ListDictItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDictItemResponse.ProtoReflect.Descriptor instead.
func (*ListDictItemResponse) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{7}
}

func (x *ListDictItemResponse) GetItems() []*DictItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListDictItemResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 创建子字典 - 请求
type CreateDictItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictItem              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDictItemRequest) Reset() {
	*x = CreateDictItemRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDictItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDictItemRequest) ProtoMessage() {}

func (x *CreateDictItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDictItemRequest.ProtoReflect.Descriptor instead.
func (*CreateDictItemRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDictItemRequest) GetData() *DictItem {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新子字典 - 请求
type UpdateDictItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *DictItem              `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`              // 要更新的字段列表
	AllowMissing  *bool                  `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3,oneof" json:"allow_missing,omitempty"` // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDictItemRequest) Reset() {
	*x = UpdateDictItemRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDictItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictItemRequest) ProtoMessage() {}

func (x *UpdateDictItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateDictItemRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDictItemRequest) GetData() *DictItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateDictItemRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDictItemRequest) GetAllowMissing() bool {
	if x != nil && x.AllowMissing != nil {
		return *x.AllowMissing
	}
	return false
}

// 查询子字典详情 - 请求
type GetDictItemRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to QueryBy:
	//
	//	*GetDictItemRequest_Id
	//	*GetDictItemRequest_Code
	QueryBy       isGetDictItemRequest_QueryBy `protobuf_oneof:"query_by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDictItemRequest) Reset() {
	*x = GetDictItemRequest{}
	mi := &file_dict_service_v1_dict_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDictItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictItemRequest) ProtoMessage() {}

func (x *GetDictItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dict_service_v1_dict_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictItemRequest.ProtoReflect.Descriptor instead.
func (*GetDictItemRequest) Descriptor() ([]byte, []int) {
	return file_dict_service_v1_dict_proto_rawDescGZIP(), []int{10}
}

func (x *GetDictItemRequest) GetQueryBy() isGetDictItemRequest_QueryBy {
	if x != nil {
		return x.QueryBy
	}
	return nil
}

func (x *GetDictItemRequest) GetId() uint32 {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictItemRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetDictItemRequest) GetCode() string {
	if x != nil {
		if x, ok := x.QueryBy.(*GetDictItemRequest_Code); ok {
			return x.Code
		}
	}
	return ""
}

type isGetDictItemRequest_QueryBy interface {
	isGetDictItemRequest_QueryBy()
}

type GetDictItemRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetDictItemRequest_Code struct {
	Code string `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*GetDictItemRequest_Id) isGetDictItemRequest_QueryBy() {}

func (*GetDictItemRequest_Code) isGetDictItemRequest_QueryBy() {}

var File_dict_service_v1_dict_proto protoreflect.FileDescriptor

const file_dict_service_v1_dict_proto_rawDesc = "" +
	"\n" +
	"\x1adict/service/v1/dict.proto\x12\x0fdict.service.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1epagination/v1/pagination.proto\"\xd3\x06\n" +
	"\bDictMain\x12&\n" +
	"\x02id\x18\x01 \x01(\rB\x11\xbaG\x0e\x92\x02\v主字典IDH\x00R\x02id\x88\x01\x01\x12.\n" +
	"\x04code\x18\x02 \x01(\tB\x15\xbaG\x12\x92\x02\x0f主字典编码H\x01R\x04code\x88\x01\x01\x12.\n" +
	"\x04name\x18\x03 \x01(\tB\x15\xbaG\x12\x92\x02\x0f主字典名称H\x02R\x04name\x88\x01\x01\x12Q\n" +
	"\x06status\x18\x04 \x01(\x0e2 .dict.service.v1.DictMain.StatusB\x12\xbaG\x0f\x92\x02\f字典状态H\x03R\x06status\x88\x01\x01\x120\n" +
	"\asort_id\x18\x05 \x01(\x05B\x12\xbaG\x0f\x92\x02\f排序编号H\x04R\x06sortId\x88\x01\x01\x12)\n" +
	"\x06remark\x18\x06 \x01(\tB\f\xbaG\t\x92\x02\x06备注H\x05R\x06remark\x88\x01\x01\x123\n" +
	"\tcreate_by\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\x06R\bcreateBy\x88\x01\x01\x123\n" +
	"\tupdate_by\x18e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\aR\bupdateBy\x88\x01\x01\x12U\n" +
	"\vcreate_time\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\bR\n" +
	"createTime\x88\x01\x01\x12U\n" +
	"\vupdate_time\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\tR\n" +
	"updateTime\x88\x01\x01\x12U\n" +
	"\vdelete_time\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\n" +
	"R\n" +
	"deleteTime\x88\x01\x01\"\x19\n" +
	"\x06Status\x12\a\n" +
	"\x03OFF\x10\x00\x12\x06\n" +
	"\x02ON\x10\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_codeB\a\n" +
	"\x05_nameB\t\n" +
	"\a_statusB\n" +
	"\n" +
	"\b_sort_idB\t\n" +
	"\a_remarkB\f\n" +
	"\n" +
	"_create_byB\f\n" +
	"\n" +
	"_update_byB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_timeB\x0e\n" +
	"\f_delete_time\"\xc3\a\n" +
	"\bDictItem\x12#\n" +
	"\x02id\x18\x01 \x01(\rB\x0e\xbaG\v\x92\x02\b子项IDH\x00R\x02id\x88\x01\x01\x12/\n" +
	"\amain_id\x18\x02 \x01(\rB\x11\xbaG\x0e\x92\x02\v主字典IDH\x01R\x06mainId\x88\x01\x01\x12+\n" +
	"\x04code\x18\x03 \x01(\tB\x12\xbaG\x0f\x92\x02\f子项编码H\x02R\x04code\x88\x01\x01\x12+\n" +
	"\x04name\x18\x04 \x01(\tB\x12\xbaG\x0f\x92\x02\f子项名称H\x03R\x04name\x88\x01\x01\x120\n" +
	"\x05value\x18\x05 \x01(\x05B\x15\xbaG\x12\x92\x02\x0f数值型标识H\x04R\x05value\x88\x01\x01\x12Q\n" +
	"\x06status\x18\x06 \x01(\x0e2 .dict.service.v1.DictItem.StatusB\x12\xbaG\x0f\x92\x02\f字典状态H\x05R\x06status\x88\x01\x01\x120\n" +
	"\asort_id\x18\a \x01(\x05B\x12\xbaG\x0f\x92\x02\f排序编号H\x06R\x06sortId\x88\x01\x01\x12)\n" +
	"\x06remark\x18\b \x01(\tB\f\xbaG\t\x92\x02\x06备注H\aR\x06remark\x88\x01\x01\x123\n" +
	"\tcreate_by\x18d \x01(\rB\x11\xbaG\x0e\x92\x02\v创建者IDH\bR\bcreateBy\x88\x01\x01\x123\n" +
	"\tupdate_by\x18e \x01(\rB\x11\xbaG\x0e\x92\x02\v更新者IDH\tR\bupdateBy\x88\x01\x01\x12U\n" +
	"\vcreate_time\x18\xc8\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f创建时间H\n" +
	"R\n" +
	"createTime\x88\x01\x01\x12U\n" +
	"\vupdate_time\x18\xc9\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f更新时间H\vR\n" +
	"updateTime\x88\x01\x01\x12U\n" +
	"\vdelete_time\x18\xca\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x12\xbaG\x0f\x92\x02\f删除时间H\fR\n" +
	"deleteTime\x88\x01\x01\"\x19\n" +
	"\x06Status\x12\a\n" +
	"\x03OFF\x10\x00\x12\x06\n" +
	"\x02ON\x10\x01B\x05\n" +
	"\x03_idB\n" +
	"\n" +
	"\b_main_idB\a\n" +
	"\x05_codeB\a\n" +
	"\x05_nameB\b\n" +
	"\x06_valueB\t\n" +
	"\a_statusB\n" +
	"\n" +
	"\b_sort_idB\t\n" +
	"\a_remarkB\f\n" +
	"\n" +
	"_create_byB\f\n" +
	"\n" +
	"_update_byB\x0e\n" +
	"\f_create_timeB\x0e\n" +
	"\f_update_timeB\x0e\n" +
	"\f_delete_time\"]\n" +
	"\x14ListDictMainResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.dict.service.v1.DictMainR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"H\n" +
	"\x12GetDictMainRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x12\x14\n" +
	"\x04code\x18\x02 \x01(\tH\x00R\x04codeB\n" +
	"\n" +
	"\bquery_by\"F\n" +
	"\x15CreateDictMainRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictMainR\x04data\"\x84\x03\n" +
	"\x15UpdateDictMainRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictMainR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"*\n" +
	"\x16BatchDeleteDictRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\rR\x03ids\"]\n" +
	"\x14ListDictItemResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.dict.service.v1.DictItemR\x05items\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"F\n" +
	"\x15CreateDictItemRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictItemR\x04data\"\x84\x03\n" +
	"\x15UpdateDictItemRequest\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.dict.service.v1.DictItemR\x04data\x12s\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB6\xbaG3:\x16\x12\x14id,realname,username\x92\x02\x18要更新的字段列表R\n" +
	"updateMask\x12\xb4\x01\n" +
	"\rallow_missing\x18\x03 \x01(\bB\x89\x01\xbaG\x85\x01\x92\x02\x81\x01如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。H\x00R\fallowMissing\x88\x01\x01B\x10\n" +
	"\x0e_allow_missing\"H\n" +
	"\x12GetDictItemRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x12\x14\n" +
	"\x04code\x18\x02 \x01(\tH\x00R\x04codeB\n" +
	"\n" +
	"\bquery_by2\x80\x06\n" +
	"\vDictService\x12R\n" +
	"\fListDictMain\x12\x19.pagination.PagingRequest\x1a%.dict.service.v1.ListDictMainResponse\"\x00\x12O\n" +
	"\vGetDictMain\x12#.dict.service.v1.GetDictMainRequest\x1a\x19.dict.service.v1.DictMain\"\x00\x12R\n" +
	"\x0eCreateDictMain\x12&.dict.service.v1.CreateDictMainRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\x0eUpdateDictMain\x12&.dict.service.v1.UpdateDictMainRequest\x1a\x16.google.protobuf.Empty\"\x00\x12S\n" +
	"\x0eDeleteDictMain\x12'.dict.service.v1.BatchDeleteDictRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\fListDictItem\x12\x19.pagination.PagingRequest\x1a%.dict.service.v1.ListDictItemResponse\"\x00\x12R\n" +
	"\x0eCreateDictItem\x12&.dict.service.v1.CreateDictItemRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\x0eUpdateDictItem\x12&.dict.service.v1.UpdateDictItemRequest\x1a\x16.google.protobuf.Empty\"\x00\x12S\n" +
	"\x0eDeleteDictItem\x12'.dict.service.v1.BatchDeleteDictRequest\x1a\x16.google.protobuf.Empty\"\x00B\xb1\x01\n" +
	"\x13com.dict.service.v1B\tDictProtoP\x01Z1kratos-admin/api/gen/go/dict/service/v1;servicev1\xa2\x02\x03DSX\xaa\x02\x0fDict.Service.V1\xca\x02\x0fDict\\Service\\V1\xe2\x02\x1bDict\\Service\\V1\\GPBMetadata\xea\x02\x11Dict::Service::V1b\x06proto3"

var (
	file_dict_service_v1_dict_proto_rawDescOnce sync.Once
	file_dict_service_v1_dict_proto_rawDescData []byte
)

func file_dict_service_v1_dict_proto_rawDescGZIP() []byte {
	file_dict_service_v1_dict_proto_rawDescOnce.Do(func() {
		file_dict_service_v1_dict_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dict_service_v1_dict_proto_rawDesc), len(file_dict_service_v1_dict_proto_rawDesc)))
	})
	return file_dict_service_v1_dict_proto_rawDescData
}

var file_dict_service_v1_dict_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dict_service_v1_dict_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_dict_service_v1_dict_proto_goTypes = []any{
	(DictMain_Status)(0),           // 0: dict.service.v1.DictMain.Status
	(DictItem_Status)(0),           // 1: dict.service.v1.DictItem.Status
	(*DictMain)(nil),               // 2: dict.service.v1.DictMain
	(*DictItem)(nil),               // 3: dict.service.v1.DictItem
	(*ListDictMainResponse)(nil),   // 4: dict.service.v1.ListDictMainResponse
	(*GetDictMainRequest)(nil),     // 5: dict.service.v1.GetDictMainRequest
	(*CreateDictMainRequest)(nil),  // 6: dict.service.v1.CreateDictMainRequest
	(*UpdateDictMainRequest)(nil),  // 7: dict.service.v1.UpdateDictMainRequest
	(*BatchDeleteDictRequest)(nil), // 8: dict.service.v1.BatchDeleteDictRequest
	(*ListDictItemResponse)(nil),   // 9: dict.service.v1.ListDictItemResponse
	(*CreateDictItemRequest)(nil),  // 10: dict.service.v1.CreateDictItemRequest
	(*UpdateDictItemRequest)(nil),  // 11: dict.service.v1.UpdateDictItemRequest
	(*GetDictItemRequest)(nil),     // 12: dict.service.v1.GetDictItemRequest
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),  // 14: google.protobuf.FieldMask
	(*v1.PagingRequest)(nil),       // 15: pagination.PagingRequest
	(*emptypb.Empty)(nil),          // 16: google.protobuf.Empty
}
var file_dict_service_v1_dict_proto_depIdxs = []int32{
	0,  // 0: dict.service.v1.DictMain.status:type_name -> dict.service.v1.DictMain.Status
	13, // 1: dict.service.v1.DictMain.create_time:type_name -> google.protobuf.Timestamp
	13, // 2: dict.service.v1.DictMain.update_time:type_name -> google.protobuf.Timestamp
	13, // 3: dict.service.v1.DictMain.delete_time:type_name -> google.protobuf.Timestamp
	1,  // 4: dict.service.v1.DictItem.status:type_name -> dict.service.v1.DictItem.Status
	13, // 5: dict.service.v1.DictItem.create_time:type_name -> google.protobuf.Timestamp
	13, // 6: dict.service.v1.DictItem.update_time:type_name -> google.protobuf.Timestamp
	13, // 7: dict.service.v1.DictItem.delete_time:type_name -> google.protobuf.Timestamp
	2,  // 8: dict.service.v1.ListDictMainResponse.items:type_name -> dict.service.v1.DictMain
	2,  // 9: dict.service.v1.CreateDictMainRequest.data:type_name -> dict.service.v1.DictMain
	2,  // 10: dict.service.v1.UpdateDictMainRequest.data:type_name -> dict.service.v1.DictMain
	14, // 11: dict.service.v1.UpdateDictMainRequest.update_mask:type_name -> google.protobuf.FieldMask
	3,  // 12: dict.service.v1.ListDictItemResponse.items:type_name -> dict.service.v1.DictItem
	3,  // 13: dict.service.v1.CreateDictItemRequest.data:type_name -> dict.service.v1.DictItem
	3,  // 14: dict.service.v1.UpdateDictItemRequest.data:type_name -> dict.service.v1.DictItem
	14, // 15: dict.service.v1.UpdateDictItemRequest.update_mask:type_name -> google.protobuf.FieldMask
	15, // 16: dict.service.v1.DictService.ListDictMain:input_type -> pagination.PagingRequest
	5,  // 17: dict.service.v1.DictService.GetDictMain:input_type -> dict.service.v1.GetDictMainRequest
	6,  // 18: dict.service.v1.DictService.CreateDictMain:input_type -> dict.service.v1.CreateDictMainRequest
	7,  // 19: dict.service.v1.DictService.UpdateDictMain:input_type -> dict.service.v1.UpdateDictMainRequest
	8,  // 20: dict.service.v1.DictService.DeleteDictMain:input_type -> dict.service.v1.BatchDeleteDictRequest
	15, // 21: dict.service.v1.DictService.ListDictItem:input_type -> pagination.PagingRequest
	10, // 22: dict.service.v1.DictService.CreateDictItem:input_type -> dict.service.v1.CreateDictItemRequest
	11, // 23: dict.service.v1.DictService.UpdateDictItem:input_type -> dict.service.v1.UpdateDictItemRequest
	8,  // 24: dict.service.v1.DictService.DeleteDictItem:input_type -> dict.service.v1.BatchDeleteDictRequest
	4,  // 25: dict.service.v1.DictService.ListDictMain:output_type -> dict.service.v1.ListDictMainResponse
	2,  // 26: dict.service.v1.DictService.GetDictMain:output_type -> dict.service.v1.DictMain
	16, // 27: dict.service.v1.DictService.CreateDictMain:output_type -> google.protobuf.Empty
	16, // 28: dict.service.v1.DictService.UpdateDictMain:output_type -> google.protobuf.Empty
	16, // 29: dict.service.v1.DictService.DeleteDictMain:output_type -> google.protobuf.Empty
	9,  // 30: dict.service.v1.DictService.ListDictItem:output_type -> dict.service.v1.ListDictItemResponse
	16, // 31: dict.service.v1.DictService.CreateDictItem:output_type -> google.protobuf.Empty
	16, // 32: dict.service.v1.DictService.UpdateDictItem:output_type -> google.protobuf.Empty
	16, // 33: dict.service.v1.DictService.DeleteDictItem:output_type -> google.protobuf.Empty
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_dict_service_v1_dict_proto_init() }
func file_dict_service_v1_dict_proto_init() {
	if File_dict_service_v1_dict_proto != nil {
		return
	}
	file_dict_service_v1_dict_proto_msgTypes[0].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[1].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[3].OneofWrappers = []any{
		(*GetDictMainRequest_Id)(nil),
		(*GetDictMainRequest_Code)(nil),
	}
	file_dict_service_v1_dict_proto_msgTypes[5].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[9].OneofWrappers = []any{}
	file_dict_service_v1_dict_proto_msgTypes[10].OneofWrappers = []any{
		(*GetDictItemRequest_Id)(nil),
		(*GetDictItemRequest_Code)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dict_service_v1_dict_proto_rawDesc), len(file_dict_service_v1_dict_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dict_service_v1_dict_proto_goTypes,
		DependencyIndexes: file_dict_service_v1_dict_proto_depIdxs,
		EnumInfos:         file_dict_service_v1_dict_proto_enumTypes,
		MessageInfos:      file_dict_service_v1_dict_proto_msgTypes,
	}.Build()
	File_dict_service_v1_dict_proto = out.File
	file_dict_service_v1_dict_proto_goTypes = nil
	file_dict_service_v1_dict_proto_depIdxs = nil
}
