// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.8.3
//   protoc               unknown
// source: dict/service/v1/dict.proto

/* eslint-disable */
import type { Empty } from "../../../google/protobuf/empty.pb";
import type { Timestamp } from "../../../google/protobuf/timestamp.pb";
import type { PagingRequest } from "../../../pagination/v1/pagination.pb";

/** 字典类型 */
export interface DictType {
  /** 字典类型ID */
  id?:
    | number
    | null
    | undefined;
  /** 字典类型唯一代码 */
  typeCode?:
    | string
    | null
    | undefined;
  /** 字典类型名称 */
  typeName?:
    | string
    | null
    | undefined;
  /** 字典状态 */
  isEnabled?:
    | boolean
    | null
    | undefined;
  /** 排序顺序，值越小越靠前 */
  sortOrder?:
    | number
    | null
    | undefined;
  /** 描述 */
  description?:
    | string
    | null
    | undefined;
  /** 创建者用户ID */
  createdBy?:
    | number
    | null
    | undefined;
  /** 更新者用户ID */
  updatedBy?:
    | number
    | null
    | undefined;
  /** 删除者用户ID */
  deletedBy?:
    | number
    | null
    | undefined;
  /** 创建时间 */
  createdAt?:
    | Timestamp
    | null
    | undefined;
  /** 更新时间 */
  updatedAt?:
    | Timestamp
    | null
    | undefined;
  /** 删除时间 */
  deletedAt?: Timestamp | null | undefined;
}

/** 字典条目 */
export interface DictEntry {
  /** 字典条目ID */
  id?:
    | number
    | null
    | undefined;
  /** 字典类型ID */
  typeId?:
    | number
    | null
    | undefined;
  /** 字典项的显示标签 */
  entryLabel?:
    | string
    | null
    | undefined;
  /** 字典项的实际值 */
  entryValue?:
    | string
    | null
    | undefined;
  /** 数值型值 */
  numericValue?:
    | number
    | null
    | undefined;
  /** 语言代码 */
  languageCode?:
    | string
    | null
    | undefined;
  /** 字典状态 */
  isEnabled?:
    | boolean
    | null
    | undefined;
  /** 排序顺序，值越小越靠前 */
  sortOrder?:
    | number
    | null
    | undefined;
  /** 描述 */
  description?:
    | string
    | null
    | undefined;
  /** 创建者ID */
  createdBy?:
    | number
    | null
    | undefined;
  /** 更新者ID */
  updatedBy?:
    | number
    | null
    | undefined;
  /** 删除者用户ID */
  deletedBy?:
    | number
    | null
    | undefined;
  /** 创建时间 */
  createdAt?:
    | Timestamp
    | null
    | undefined;
  /** 更新时间 */
  updatedAt?:
    | Timestamp
    | null
    | undefined;
  /** 删除时间 */
  deletedAt?: Timestamp | null | undefined;
}

/** 查询字典类型列表 - 回应 */
export interface ListDictTypeResponse {
  items: DictType[];
  total: number;
}

/** 查询字典类型详情 - 请求 */
export interface GetDictTypeRequest {
  queryBy?: { $case: "id"; id: number } | { $case: "code"; code: string } | null;
}

/** 创建字典类型 - 请求 */
export interface CreateDictTypeRequest {
  data: DictType | null;
}

/** 更新字典类型 - 请求 */
export interface UpdateDictTypeRequest {
  data:
    | DictType
    | null;
  /** 要更新的字段列表 */
  updateMask:
    | string[]
    | null;
  /** 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。 */
  allowMissing?: boolean | null | undefined;
}

/** 批量删除字典 - 请求 */
export interface BatchDeleteDictRequest {
  /** 要删除的ID列表 */
  ids: number[];
}

/** 查询字典条目列表 - 回应 */
export interface ListDictEntryResponse {
  items: DictEntry[];
  total: number;
}

/** 创建字典条目 - 请求 */
export interface CreateDictEntryRequest {
  data: DictEntry | null;
}

/** 更新字典条目 - 请求 */
export interface UpdateDictEntryRequest {
  data:
    | DictEntry
    | null;
  /** 要更新的字段列表 */
  updateMask:
    | string[]
    | null;
  /** 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。 */
  allowMissing?: boolean | null | undefined;
}

/** 查询字典条目详情 - 请求 */
export interface GetDictEntryRequest {
  queryBy?: { $case: "id"; id: number } | { $case: "code"; code: string } | null;
}

/** 数据字典管理服务 */
export interface DictService {
  /** 分页查询字典类型列表 */
  ListDictType(request: PagingRequest): Promise<ListDictTypeResponse>;
  /** 查询字典类型详情 */
  GetDictType(request: GetDictTypeRequest): Promise<DictType>;
  /** 创建字典类型 */
  CreateDictType(request: CreateDictTypeRequest): Promise<Empty>;
  /** 更新字典类型 */
  UpdateDictType(request: UpdateDictTypeRequest): Promise<Empty>;
  /** 删除字典类型 */
  DeleteDictType(request: BatchDeleteDictRequest): Promise<Empty>;
  /** 分页查询字典条目列表 */
  ListDictEntry(request: PagingRequest): Promise<ListDictEntryResponse>;
  /** 创建字典条目 */
  CreateDictEntry(request: CreateDictEntryRequest): Promise<Empty>;
  /** 更新字典条目 */
  UpdateDictEntry(request: UpdateDictEntryRequest): Promise<Empty>;
  /** 删除字典条目 */
  DeleteDictEntry(request: BatchDeleteDictRequest): Promise<Empty>;
}
