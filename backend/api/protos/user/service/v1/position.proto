syntax = "proto3";

package user.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

import "pagination/v1/pagination.proto";

// 职位服务
service PositionService {
  // 查询职位列表
  rpc List (pagination.PagingRequest) returns (ListPositionResponse) {}

  // 查询职位详情
  rpc Get (GetPositionRequest) returns (Position) {}

  // 创建职位
  rpc Create (CreatePositionRequest) returns (google.protobuf.Empty) {}

  // 更新职位
  rpc Update (UpdatePositionRequest) returns (google.protobuf.Empty) {}

  // 删除职位
  rpc Delete (DeletePositionRequest) returns (google.protobuf.Empty) {}

  // 批量创建职位
  rpc BatchCreate (BatchCreatePositionsRequest) returns (BatchCreatePositionsResponse) {}
}

// 职位
message Position {
  // 职位状态
  enum Status {
    OFF = 0;         // 禁用
    ON = 1;          // 启用
  }

  optional uint32 id = 1 [
    json_name = "id",
    (gnostic.openapi.v3.property) = {description: "职位ID"}
  ];  // 职位ID

  optional string name = 2 [json_name = "name", (gnostic.openapi.v3.property) = {description: "职位名称"}];  // 职位名称
  optional string code = 3 [json_name = "code", (gnostic.openapi.v3.property) = {description: "唯一编码（建议规则：部门编码 + 职位类型 + 序号，如 “FIN-LEADER-001”），用于数据同步和快速识别"}];  // 唯一编码（建议规则：部门编码 + 职位类型 + 序号，如 “FIN-LEADER-001”），用于数据同步和快速识别
  optional uint32 quota = 4 [json_name = "quota", (gnostic.openapi.v3.property) = {description: "编制人数（该职位最多可容纳的员工数量，0表示无限制）"}];  // 编制人数（该职位最多可容纳的员工数量，0表示无限制）
  optional int32 sort_order = 5 [json_name = "sortOrder", (gnostic.openapi.v3.property) = {description: "排序顺序，值越小越靠前"}];  // 排序顺序，值越小越靠前

  optional Status status = 6 [(gnostic.openapi.v3.property) = {description: "状态"}]; // 状态
  optional string remark = 7 [json_name = "remark", (gnostic.openapi.v3.property) = {description: "备注"}];  // 备注
  optional string description = 8 [json_name = "description", (gnostic.openapi.v3.property) = {description: "职责描述"}];  // 职责描述

  optional uint32 organization_id = 10 [
    json_name = "organizationId",
    (gnostic.openapi.v3.property) = {description: "所属组织ID"}
  ];  // 所属组织ID

  optional string organization_name = 11 [
    json_name = "organizationName",
    (gnostic.openapi.v3.property) = {description: "所属组织名称"}
  ];  // 所属组织名称

  optional uint32 department_id = 12 [
    json_name = "departmentId",
    (gnostic.openapi.v3.property) = {description: "所属部门ID"}
  ];  // 所属部门ID

  optional string department_name = 13 [
    json_name = "departmentName",
    (gnostic.openapi.v3.property) = {description: "所属部门名称"}
  ];  // 所属部门名称

  optional uint32 tenant_id = 14 [json_name = "tenantId", (gnostic.openapi.v3.property) = {description: "租户ID"}];  // 租户ID

  optional uint32 parent_id = 50 [json_name = "parentId", (gnostic.openapi.v3.property) = {description: "父节点ID"}];  // 父节点ID
  repeated Position children = 51 [json_name = "children", (gnostic.openapi.v3.property) = {description: "子节点树"}];  // 子节点树

  optional uint32 created_by = 100 [json_name = "createdBy", (gnostic.openapi.v3.property) = {description: "创建者ID"}]; // 创建者ID
  optional uint32 updated_by = 101 [json_name = "updatedBy", (gnostic.openapi.v3.property) = {description: "更新者ID"}]; // 更新者ID
  optional uint32 deleted_by = 102 [json_name = "deletedBy", (gnostic.openapi.v3.property) = {description: "删除者用户ID"}]; // 删除者用户ID

  optional google.protobuf.Timestamp created_at = 200 [json_name = "createdAt", (gnostic.openapi.v3.property) = {description: "创建时间"}];// 创建时间
  optional google.protobuf.Timestamp updated_at = 201 [json_name = "updatedAt", (gnostic.openapi.v3.property) = {description: "更新时间"}];// 更新时间
  optional google.protobuf.Timestamp deleted_at = 202 [json_name = "deletedAt", (gnostic.openapi.v3.property) = {description: "删除时间"}];// 删除时间
}

// 获取职位列表 - 答复
message ListPositionResponse {
  repeated Position items = 1;
  uint32 total = 2;
}

// 获取职位数据 - 请求
message GetPositionRequest {
  uint32 id = 1;
}

// 创建职位 - 请求
message CreatePositionRequest {
  Position data = 1;
}

// 更新职位 - 请求
message UpdatePositionRequest {
  Position data = 1;

  google.protobuf.FieldMask update_mask = 2 [
    (gnostic.openapi.v3.property) = {
      description: "要更新的字段列表",
      example: {yaml : "id,realname,username"}
    },
    json_name = "updateMask"
  ]; // 要更新的字段列表

  optional bool allow_missing = 3 [
    (gnostic.openapi.v3.property) = {description: "如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。"},
    json_name = "allowMissing"
  ]; // 如果设置为true的时候，资源不存在则会新增(插入)，并且在这种情况下`updateMask`字段将会被忽略。
}

// 删除职位 - 请求
message DeletePositionRequest {
  uint32 id = 1;
}

message BatchCreatePositionsRequest {
  repeated Position data = 1;
}
message BatchCreatePositionsResponse {
  repeated int32 created_ids = 1 [
    json_name = "createdIds",
    (gnostic.openapi.v3.property) = {
      description: "创建成功的职位ID列表"
    }
  ]; // 创建成功的职位ID列表
}
