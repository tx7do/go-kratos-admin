// Code generated by ent, DO NOT EDIT.

package adminloginrestriction

import (
	"kratos-admin/app/admin/service/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldDeletedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldDeletedBy, v))
}

// TargetID applies equality check predicate on the "target_id" field. It's identical to TargetIDEQ.
func TargetID(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldTargetID, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldValue, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldReason, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldUpdatedAt))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldDeletedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldCreatedBy))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldUpdatedBy))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldDeletedBy))
}

// TargetIDEQ applies the EQ predicate on the "target_id" field.
func TargetIDEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldTargetID, v))
}

// TargetIDNEQ applies the NEQ predicate on the "target_id" field.
func TargetIDNEQ(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldTargetID, v))
}

// TargetIDIn applies the In predicate on the "target_id" field.
func TargetIDIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldTargetID, vs...))
}

// TargetIDNotIn applies the NotIn predicate on the "target_id" field.
func TargetIDNotIn(vs ...uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldTargetID, vs...))
}

// TargetIDGT applies the GT predicate on the "target_id" field.
func TargetIDGT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldTargetID, v))
}

// TargetIDGTE applies the GTE predicate on the "target_id" field.
func TargetIDGTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldTargetID, v))
}

// TargetIDLT applies the LT predicate on the "target_id" field.
func TargetIDLT(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldTargetID, v))
}

// TargetIDLTE applies the LTE predicate on the "target_id" field.
func TargetIDLTE(v uint32) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldTargetID, v))
}

// TargetIDIsNil applies the IsNil predicate on the "target_id" field.
func TargetIDIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldTargetID))
}

// TargetIDNotNil applies the NotNil predicate on the "target_id" field.
func TargetIDNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldTargetID))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldValue, v))
}

// ValueContains applies the Contains predicate on the "value" field.
func ValueContains(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldContains(FieldValue, v))
}

// ValueHasPrefix applies the HasPrefix predicate on the "value" field.
func ValueHasPrefix(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldHasPrefix(FieldValue, v))
}

// ValueHasSuffix applies the HasSuffix predicate on the "value" field.
func ValueHasSuffix(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldHasSuffix(FieldValue, v))
}

// ValueIsNil applies the IsNil predicate on the "value" field.
func ValueIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldValue))
}

// ValueNotNil applies the NotNil predicate on the "value" field.
func ValueNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldValue))
}

// ValueEqualFold applies the EqualFold predicate on the "value" field.
func ValueEqualFold(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEqualFold(FieldValue, v))
}

// ValueContainsFold applies the ContainsFold predicate on the "value" field.
func ValueContainsFold(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldContainsFold(FieldValue, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonIsNil applies the IsNil predicate on the "reason" field.
func ReasonIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldReason))
}

// ReasonNotNil applies the NotNil predicate on the "reason" field.
func ReasonNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldReason))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldContainsFold(FieldReason, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v Type) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v Type) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...Type) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...Type) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldType, vs...))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldType))
}

// MethodEQ applies the EQ predicate on the "method" field.
func MethodEQ(v Method) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldEQ(FieldMethod, v))
}

// MethodNEQ applies the NEQ predicate on the "method" field.
func MethodNEQ(v Method) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNEQ(FieldMethod, v))
}

// MethodIn applies the In predicate on the "method" field.
func MethodIn(vs ...Method) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIn(FieldMethod, vs...))
}

// MethodNotIn applies the NotIn predicate on the "method" field.
func MethodNotIn(vs ...Method) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotIn(FieldMethod, vs...))
}

// MethodIsNil applies the IsNil predicate on the "method" field.
func MethodIsNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldIsNull(FieldMethod))
}

// MethodNotNil applies the NotNil predicate on the "method" field.
func MethodNotNil() predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.FieldNotNull(FieldMethod))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AdminLoginRestriction) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AdminLoginRestriction) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AdminLoginRestriction) predicate.AdminLoginRestriction {
	return predicate.AdminLoginRestriction(sql.NotPredicates(p))
}
