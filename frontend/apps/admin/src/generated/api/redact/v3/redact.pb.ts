// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.8.1
//   protoc               unknown
// source: redact/v3/redact.proto

/* eslint-disable */

/**
 * FieldRules encapsulates options to change the redacted values of any type of field.
 * Depending on the field, the correct type value should be used.
 */
export interface FieldRules {
  /** values for redacted field */
  values?:
    | //
    /** Scalar Field Types values */
    { $case: "float"; float: number }
    | { $case: "double"; double: number }
    | { $case: "int32"; int32: number }
    | { $case: "int64"; int64: string }
    | { $case: "uint32"; uint32: number }
    | { $case: "uint64"; uint64: string }
    | { $case: "sint32"; sint32: number }
    | { $case: "sint64"; sint64: string }
    | { $case: "fixed32"; fixed32: number }
    | { $case: "fixed64"; fixed64: string }
    | { $case: "sfixed32"; sfixed32: number }
    | { $case: "sfixed64"; sfixed64: string }
    | { $case: "bool"; bool: boolean }
    | { $case: "string"; string: string }
    | { $case: "bytes"; bytes: Uint8Array }
    | { $case: "enum"; enum: number }
    | //
    /** Message defines rules for singular message type fields only */
    { $case: "message"; message: MessageRules }
    | //
    /** Element defines rules for repeated or map type fields */
    { $case: "element"; element: ElementRules }
    | null;
}

/**
 * MessageRules describe the constraints applied to embedded message for redaction.
 * For message-type fields, rules are performed recursively.
 */
export interface MessageRules {
  /** Skip specifies that the redaction rules of this field should not be evaluated */
  skip: boolean;
  /** Empty specifies that after redaction this field should be set to empty object */
  empty: boolean;
  /** Nil specifies that after redaction this field should be set to nil object */
  nil: boolean;
  /** Apply specifies that redaction is to be called for the message type */
  apply: boolean;
}

/** ElementRules describe the constraints applied to `repeated` or `map` values */
export interface ElementRules {
  /** Empty specifies that after redaction the list/map will be empty */
  empty: boolean;
  /**
   * Nested specifies that default rules is to be applied `recursively` on each
   * item of map/list
   */
  nested: boolean;
  /**
   * Item specifies that some custom redaction rules to be applied `recursively`
   * on each item in map/list.
   */
  item: FieldRules | null;
}
