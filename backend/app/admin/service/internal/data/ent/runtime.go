// Code generated by ent, DO NOT EDIT.

package ent

import (
	"kratos-admin/app/admin/service/internal/data/ent/adminloginlog"
	"kratos-admin/app/admin/service/internal/data/ent/adminloginrestriction"
	"kratos-admin/app/admin/service/internal/data/ent/adminoperationlog"
	"kratos-admin/app/admin/service/internal/data/ent/apiresource"
	"kratos-admin/app/admin/service/internal/data/ent/department"
	"kratos-admin/app/admin/service/internal/data/ent/dictitem"
	"kratos-admin/app/admin/service/internal/data/ent/dictmain"
	"kratos-admin/app/admin/service/internal/data/ent/file"
	"kratos-admin/app/admin/service/internal/data/ent/menu"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessage"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessagecategory"
	"kratos-admin/app/admin/service/internal/data/ent/notificationmessagerecipient"
	"kratos-admin/app/admin/service/internal/data/ent/organization"
	"kratos-admin/app/admin/service/internal/data/ent/position"
	"kratos-admin/app/admin/service/internal/data/ent/privatemessage"
	"kratos-admin/app/admin/service/internal/data/ent/role"
	"kratos-admin/app/admin/service/internal/data/ent/roleapi"
	"kratos-admin/app/admin/service/internal/data/ent/roledept"
	"kratos-admin/app/admin/service/internal/data/ent/rolemenu"
	"kratos-admin/app/admin/service/internal/data/ent/roleorg"
	"kratos-admin/app/admin/service/internal/data/ent/roleposition"
	"kratos-admin/app/admin/service/internal/data/ent/schema"
	"kratos-admin/app/admin/service/internal/data/ent/task"
	"kratos-admin/app/admin/service/internal/data/ent/tenant"
	"kratos-admin/app/admin/service/internal/data/ent/user"
	"kratos-admin/app/admin/service/internal/data/ent/usercredential"
	"kratos-admin/app/admin/service/internal/data/ent/userposition"
	"kratos-admin/app/admin/service/internal/data/ent/userrole"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	adminloginlogMixin := schema.AdminLoginLog{}.Mixin()
	adminloginlogMixinFields0 := adminloginlogMixin[0].Fields()
	_ = adminloginlogMixinFields0
	adminloginlogFields := schema.AdminLoginLog{}.Fields()
	_ = adminloginlogFields
	// adminloginlogDescID is the schema descriptor for id field.
	adminloginlogDescID := adminloginlogMixinFields0[0].Descriptor()
	// adminloginlog.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminloginlog.IDValidator = adminloginlogDescID.Validators[0].(func(uint32) error)
	adminloginrestrictionMixin := schema.AdminLoginRestriction{}.Mixin()
	adminloginrestrictionMixinFields0 := adminloginrestrictionMixin[0].Fields()
	_ = adminloginrestrictionMixinFields0
	adminloginrestrictionFields := schema.AdminLoginRestriction{}.Fields()
	_ = adminloginrestrictionFields
	// adminloginrestrictionDescID is the schema descriptor for id field.
	adminloginrestrictionDescID := adminloginrestrictionMixinFields0[0].Descriptor()
	// adminloginrestriction.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminloginrestriction.IDValidator = adminloginrestrictionDescID.Validators[0].(func(uint32) error)
	adminoperationlogMixin := schema.AdminOperationLog{}.Mixin()
	adminoperationlogMixinFields0 := adminoperationlogMixin[0].Fields()
	_ = adminoperationlogMixinFields0
	adminoperationlogFields := schema.AdminOperationLog{}.Fields()
	_ = adminoperationlogFields
	// adminoperationlogDescID is the schema descriptor for id field.
	adminoperationlogDescID := adminoperationlogMixinFields0[0].Descriptor()
	// adminoperationlog.IDValidator is a validator for the "id" field. It is called by the builders before save.
	adminoperationlog.IDValidator = adminoperationlogDescID.Validators[0].(func(uint32) error)
	apiresourceMixin := schema.ApiResource{}.Mixin()
	apiresourceMixinFields0 := apiresourceMixin[0].Fields()
	_ = apiresourceMixinFields0
	apiresourceFields := schema.ApiResource{}.Fields()
	_ = apiresourceFields
	// apiresourceDescID is the schema descriptor for id field.
	apiresourceDescID := apiresourceMixinFields0[0].Descriptor()
	// apiresource.IDValidator is a validator for the "id" field. It is called by the builders before save.
	apiresource.IDValidator = apiresourceDescID.Validators[0].(func(uint32) error)
	departmentMixin := schema.Department{}.Mixin()
	departmentMixinFields0 := departmentMixin[0].Fields()
	_ = departmentMixinFields0
	departmentMixinFields4 := departmentMixin[4].Fields()
	_ = departmentMixinFields4
	departmentMixinFields5 := departmentMixin[5].Fields()
	_ = departmentMixinFields5
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescRemark is the schema descriptor for remark field.
	departmentDescRemark := departmentMixinFields4[0].Descriptor()
	// department.DefaultRemark holds the default value on creation for the remark field.
	department.DefaultRemark = departmentDescRemark.Default.(string)
	// departmentDescTenantID is the schema descriptor for tenant_id field.
	departmentDescTenantID := departmentMixinFields5[0].Descriptor()
	// department.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	department.TenantIDValidator = departmentDescTenantID.Validators[0].(func(uint32) error)
	// departmentDescName is the schema descriptor for name field.
	departmentDescName := departmentFields[0].Descriptor()
	// department.NameValidator is a validator for the "name" field. It is called by the builders before save.
	department.NameValidator = departmentDescName.Validators[0].(func(string) error)
	// departmentDescSortID is the schema descriptor for sort_id field.
	departmentDescSortID := departmentFields[4].Descriptor()
	// department.DefaultSortID holds the default value on creation for the sort_id field.
	department.DefaultSortID = departmentDescSortID.Default.(int32)
	// departmentDescID is the schema descriptor for id field.
	departmentDescID := departmentMixinFields0[0].Descriptor()
	// department.IDValidator is a validator for the "id" field. It is called by the builders before save.
	department.IDValidator = departmentDescID.Validators[0].(func(uint32) error)
	dictitemMixin := schema.DictItem{}.Mixin()
	dictitemMixinFields0 := dictitemMixin[0].Fields()
	_ = dictitemMixinFields0
	dictitemMixinFields4 := dictitemMixin[4].Fields()
	_ = dictitemMixinFields4
	dictitemMixinFields5 := dictitemMixin[5].Fields()
	_ = dictitemMixinFields5
	dictitemFields := schema.DictItem{}.Fields()
	_ = dictitemFields
	// dictitemDescRemark is the schema descriptor for remark field.
	dictitemDescRemark := dictitemMixinFields4[0].Descriptor()
	// dictitem.DefaultRemark holds the default value on creation for the remark field.
	dictitem.DefaultRemark = dictitemDescRemark.Default.(string)
	// dictitemDescTenantID is the schema descriptor for tenant_id field.
	dictitemDescTenantID := dictitemMixinFields5[0].Descriptor()
	// dictitem.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	dictitem.TenantIDValidator = dictitemDescTenantID.Validators[0].(func(uint32) error)
	// dictitemDescCode is the schema descriptor for code field.
	dictitemDescCode := dictitemFields[0].Descriptor()
	// dictitem.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	dictitem.CodeValidator = dictitemDescCode.Validators[0].(func(string) error)
	// dictitemDescName is the schema descriptor for name field.
	dictitemDescName := dictitemFields[1].Descriptor()
	// dictitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	dictitem.NameValidator = dictitemDescName.Validators[0].(func(string) error)
	// dictitemDescSortID is the schema descriptor for sort_id field.
	dictitemDescSortID := dictitemFields[3].Descriptor()
	// dictitem.DefaultSortID holds the default value on creation for the sort_id field.
	dictitem.DefaultSortID = dictitemDescSortID.Default.(int32)
	// dictitemDescID is the schema descriptor for id field.
	dictitemDescID := dictitemMixinFields0[0].Descriptor()
	// dictitem.IDValidator is a validator for the "id" field. It is called by the builders before save.
	dictitem.IDValidator = dictitemDescID.Validators[0].(func(uint32) error)
	dictmainMixin := schema.DictMain{}.Mixin()
	dictmainMixinFields0 := dictmainMixin[0].Fields()
	_ = dictmainMixinFields0
	dictmainMixinFields4 := dictmainMixin[4].Fields()
	_ = dictmainMixinFields4
	dictmainMixinFields5 := dictmainMixin[5].Fields()
	_ = dictmainMixinFields5
	dictmainFields := schema.DictMain{}.Fields()
	_ = dictmainFields
	// dictmainDescRemark is the schema descriptor for remark field.
	dictmainDescRemark := dictmainMixinFields4[0].Descriptor()
	// dictmain.DefaultRemark holds the default value on creation for the remark field.
	dictmain.DefaultRemark = dictmainDescRemark.Default.(string)
	// dictmainDescTenantID is the schema descriptor for tenant_id field.
	dictmainDescTenantID := dictmainMixinFields5[0].Descriptor()
	// dictmain.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	dictmain.TenantIDValidator = dictmainDescTenantID.Validators[0].(func(uint32) error)
	// dictmainDescCode is the schema descriptor for code field.
	dictmainDescCode := dictmainFields[0].Descriptor()
	// dictmain.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	dictmain.CodeValidator = dictmainDescCode.Validators[0].(func(string) error)
	// dictmainDescName is the schema descriptor for name field.
	dictmainDescName := dictmainFields[1].Descriptor()
	// dictmain.NameValidator is a validator for the "name" field. It is called by the builders before save.
	dictmain.NameValidator = dictmainDescName.Validators[0].(func(string) error)
	// dictmainDescID is the schema descriptor for id field.
	dictmainDescID := dictmainMixinFields0[0].Descriptor()
	// dictmain.IDValidator is a validator for the "id" field. It is called by the builders before save.
	dictmain.IDValidator = dictmainDescID.Validators[0].(func(uint32) error)
	fileMixin := schema.File{}.Mixin()
	fileMixinFields0 := fileMixin[0].Fields()
	_ = fileMixinFields0
	fileMixinFields3 := fileMixin[3].Fields()
	_ = fileMixinFields3
	fileMixinFields4 := fileMixin[4].Fields()
	_ = fileMixinFields4
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescRemark is the schema descriptor for remark field.
	fileDescRemark := fileMixinFields3[0].Descriptor()
	// file.DefaultRemark holds the default value on creation for the remark field.
	file.DefaultRemark = fileDescRemark.Default.(string)
	// fileDescTenantID is the schema descriptor for tenant_id field.
	fileDescTenantID := fileMixinFields4[0].Descriptor()
	// file.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	file.TenantIDValidator = fileDescTenantID.Validators[0].(func(uint32) error)
	// fileDescID is the schema descriptor for id field.
	fileDescID := fileMixinFields0[0].Descriptor()
	// file.IDValidator is a validator for the "id" field. It is called by the builders before save.
	file.IDValidator = fileDescID.Validators[0].(func(uint32) error)
	menuMixin := schema.Menu{}.Mixin()
	menuMixinFields0 := menuMixin[0].Fields()
	_ = menuMixinFields0
	menuMixinFields4 := menuMixin[4].Fields()
	_ = menuMixinFields4
	menuFields := schema.Menu{}.Fields()
	_ = menuFields
	// menuDescRemark is the schema descriptor for remark field.
	menuDescRemark := menuMixinFields4[0].Descriptor()
	// menu.DefaultRemark holds the default value on creation for the remark field.
	menu.DefaultRemark = menuDescRemark.Default.(string)
	// menuDescPath is the schema descriptor for path field.
	menuDescPath := menuFields[3].Descriptor()
	// menu.DefaultPath holds the default value on creation for the path field.
	menu.DefaultPath = menuDescPath.Default.(string)
	// menuDescComponent is the schema descriptor for component field.
	menuDescComponent := menuFields[7].Descriptor()
	// menu.DefaultComponent holds the default value on creation for the component field.
	menu.DefaultComponent = menuDescComponent.Default.(string)
	// menuDescID is the schema descriptor for id field.
	menuDescID := menuMixinFields0[0].Descriptor()
	// menu.IDValidator is a validator for the "id" field. It is called by the builders before save.
	menu.IDValidator = menuDescID.Validators[0].(func(uint32) error)
	notificationmessageMixin := schema.NotificationMessage{}.Mixin()
	notificationmessageMixinFields0 := notificationmessageMixin[0].Fields()
	_ = notificationmessageMixinFields0
	notificationmessageMixinFields4 := notificationmessageMixin[4].Fields()
	_ = notificationmessageMixinFields4
	notificationmessageFields := schema.NotificationMessage{}.Fields()
	_ = notificationmessageFields
	// notificationmessageDescTenantID is the schema descriptor for tenant_id field.
	notificationmessageDescTenantID := notificationmessageMixinFields4[0].Descriptor()
	// notificationmessage.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	notificationmessage.TenantIDValidator = notificationmessageDescTenantID.Validators[0].(func(uint32) error)
	// notificationmessageDescID is the schema descriptor for id field.
	notificationmessageDescID := notificationmessageMixinFields0[0].Descriptor()
	// notificationmessage.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessage.IDValidator = notificationmessageDescID.Validators[0].(func(uint32) error)
	notificationmessagecategoryMixin := schema.NotificationMessageCategory{}.Mixin()
	notificationmessagecategoryMixinFields0 := notificationmessagecategoryMixin[0].Fields()
	_ = notificationmessagecategoryMixinFields0
	notificationmessagecategoryMixinFields4 := notificationmessagecategoryMixin[4].Fields()
	_ = notificationmessagecategoryMixinFields4
	notificationmessagecategoryMixinFields5 := notificationmessagecategoryMixin[5].Fields()
	_ = notificationmessagecategoryMixinFields5
	notificationmessagecategoryFields := schema.NotificationMessageCategory{}.Fields()
	_ = notificationmessagecategoryFields
	// notificationmessagecategoryDescRemark is the schema descriptor for remark field.
	notificationmessagecategoryDescRemark := notificationmessagecategoryMixinFields4[0].Descriptor()
	// notificationmessagecategory.DefaultRemark holds the default value on creation for the remark field.
	notificationmessagecategory.DefaultRemark = notificationmessagecategoryDescRemark.Default.(string)
	// notificationmessagecategoryDescTenantID is the schema descriptor for tenant_id field.
	notificationmessagecategoryDescTenantID := notificationmessagecategoryMixinFields5[0].Descriptor()
	// notificationmessagecategory.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	notificationmessagecategory.TenantIDValidator = notificationmessagecategoryDescTenantID.Validators[0].(func(uint32) error)
	// notificationmessagecategoryDescName is the schema descriptor for name field.
	notificationmessagecategoryDescName := notificationmessagecategoryFields[0].Descriptor()
	// notificationmessagecategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	notificationmessagecategory.NameValidator = notificationmessagecategoryDescName.Validators[0].(func(string) error)
	// notificationmessagecategoryDescCode is the schema descriptor for code field.
	notificationmessagecategoryDescCode := notificationmessagecategoryFields[1].Descriptor()
	// notificationmessagecategory.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	notificationmessagecategory.CodeValidator = notificationmessagecategoryDescCode.Validators[0].(func(string) error)
	// notificationmessagecategoryDescSortID is the schema descriptor for sort_id field.
	notificationmessagecategoryDescSortID := notificationmessagecategoryFields[2].Descriptor()
	// notificationmessagecategory.DefaultSortID holds the default value on creation for the sort_id field.
	notificationmessagecategory.DefaultSortID = notificationmessagecategoryDescSortID.Default.(int32)
	// notificationmessagecategoryDescID is the schema descriptor for id field.
	notificationmessagecategoryDescID := notificationmessagecategoryMixinFields0[0].Descriptor()
	// notificationmessagecategory.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessagecategory.IDValidator = notificationmessagecategoryDescID.Validators[0].(func(uint32) error)
	notificationmessagerecipientMixin := schema.NotificationMessageRecipient{}.Mixin()
	notificationmessagerecipientMixinFields0 := notificationmessagerecipientMixin[0].Fields()
	_ = notificationmessagerecipientMixinFields0
	notificationmessagerecipientMixinFields2 := notificationmessagerecipientMixin[2].Fields()
	_ = notificationmessagerecipientMixinFields2
	notificationmessagerecipientFields := schema.NotificationMessageRecipient{}.Fields()
	_ = notificationmessagerecipientFields
	// notificationmessagerecipientDescTenantID is the schema descriptor for tenant_id field.
	notificationmessagerecipientDescTenantID := notificationmessagerecipientMixinFields2[0].Descriptor()
	// notificationmessagerecipient.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	notificationmessagerecipient.TenantIDValidator = notificationmessagerecipientDescTenantID.Validators[0].(func(uint32) error)
	// notificationmessagerecipientDescID is the schema descriptor for id field.
	notificationmessagerecipientDescID := notificationmessagerecipientMixinFields0[0].Descriptor()
	// notificationmessagerecipient.IDValidator is a validator for the "id" field. It is called by the builders before save.
	notificationmessagerecipient.IDValidator = notificationmessagerecipientDescID.Validators[0].(func(uint32) error)
	organizationMixin := schema.Organization{}.Mixin()
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationMixinFields4 := organizationMixin[4].Fields()
	_ = organizationMixinFields4
	organizationMixinFields5 := organizationMixin[5].Fields()
	_ = organizationMixinFields5
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescRemark is the schema descriptor for remark field.
	organizationDescRemark := organizationMixinFields4[0].Descriptor()
	// organization.DefaultRemark holds the default value on creation for the remark field.
	organization.DefaultRemark = organizationDescRemark.Default.(string)
	// organizationDescTenantID is the schema descriptor for tenant_id field.
	organizationDescTenantID := organizationMixinFields5[0].Descriptor()
	// organization.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	organization.TenantIDValidator = organizationDescTenantID.Validators[0].(func(uint32) error)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	// organizationDescSortID is the schema descriptor for sort_id field.
	organizationDescSortID := organizationFields[2].Descriptor()
	// organization.DefaultSortID holds the default value on creation for the sort_id field.
	organization.DefaultSortID = organizationDescSortID.Default.(int32)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields0[0].Descriptor()
	// organization.IDValidator is a validator for the "id" field. It is called by the builders before save.
	organization.IDValidator = organizationDescID.Validators[0].(func(uint32) error)
	positionMixin := schema.Position{}.Mixin()
	positionMixinFields0 := positionMixin[0].Fields()
	_ = positionMixinFields0
	positionMixinFields4 := positionMixin[4].Fields()
	_ = positionMixinFields4
	positionMixinFields5 := positionMixin[5].Fields()
	_ = positionMixinFields5
	positionFields := schema.Position{}.Fields()
	_ = positionFields
	// positionDescRemark is the schema descriptor for remark field.
	positionDescRemark := positionMixinFields4[0].Descriptor()
	// position.DefaultRemark holds the default value on creation for the remark field.
	position.DefaultRemark = positionDescRemark.Default.(string)
	// positionDescTenantID is the schema descriptor for tenant_id field.
	positionDescTenantID := positionMixinFields5[0].Descriptor()
	// position.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	position.TenantIDValidator = positionDescTenantID.Validators[0].(func(uint32) error)
	// positionDescName is the schema descriptor for name field.
	positionDescName := positionFields[0].Descriptor()
	// position.NameValidator is a validator for the "name" field. It is called by the builders before save.
	position.NameValidator = positionDescName.Validators[0].(func(string) error)
	// positionDescCode is the schema descriptor for code field.
	positionDescCode := positionFields[1].Descriptor()
	// position.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	position.CodeValidator = positionDescCode.Validators[0].(func(string) error)
	// positionDescSortID is the schema descriptor for sort_id field.
	positionDescSortID := positionFields[3].Descriptor()
	// position.DefaultSortID holds the default value on creation for the sort_id field.
	position.DefaultSortID = positionDescSortID.Default.(int32)
	// positionDescID is the schema descriptor for id field.
	positionDescID := positionMixinFields0[0].Descriptor()
	// position.IDValidator is a validator for the "id" field. It is called by the builders before save.
	position.IDValidator = positionDescID.Validators[0].(func(uint32) error)
	privatemessageMixin := schema.PrivateMessage{}.Mixin()
	privatemessageMixinFields0 := privatemessageMixin[0].Fields()
	_ = privatemessageMixinFields0
	privatemessageMixinFields2 := privatemessageMixin[2].Fields()
	_ = privatemessageMixinFields2
	privatemessageFields := schema.PrivateMessage{}.Fields()
	_ = privatemessageFields
	// privatemessageDescTenantID is the schema descriptor for tenant_id field.
	privatemessageDescTenantID := privatemessageMixinFields2[0].Descriptor()
	// privatemessage.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	privatemessage.TenantIDValidator = privatemessageDescTenantID.Validators[0].(func(uint32) error)
	// privatemessageDescID is the schema descriptor for id field.
	privatemessageDescID := privatemessageMixinFields0[0].Descriptor()
	// privatemessage.IDValidator is a validator for the "id" field. It is called by the builders before save.
	privatemessage.IDValidator = privatemessageDescID.Validators[0].(func(uint32) error)
	roleMixin := schema.Role{}.Mixin()
	roleMixinFields0 := roleMixin[0].Fields()
	_ = roleMixinFields0
	roleMixinFields4 := roleMixin[4].Fields()
	_ = roleMixinFields4
	roleMixinFields5 := roleMixin[5].Fields()
	_ = roleMixinFields5
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescRemark is the schema descriptor for remark field.
	roleDescRemark := roleMixinFields4[0].Descriptor()
	// role.DefaultRemark holds the default value on creation for the remark field.
	role.DefaultRemark = roleDescRemark.Default.(string)
	// roleDescTenantID is the schema descriptor for tenant_id field.
	roleDescTenantID := roleMixinFields5[0].Descriptor()
	// role.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	role.TenantIDValidator = roleDescTenantID.Validators[0].(func(uint32) error)
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[0].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescCode is the schema descriptor for code field.
	roleDescCode := roleFields[1].Descriptor()
	// role.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	role.CodeValidator = roleDescCode.Validators[0].(func(string) error)
	// roleDescSortID is the schema descriptor for sort_id field.
	roleDescSortID := roleFields[3].Descriptor()
	// role.DefaultSortID holds the default value on creation for the sort_id field.
	role.DefaultSortID = roleDescSortID.Default.(int32)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleMixinFields0[0].Descriptor()
	// role.IDValidator is a validator for the "id" field. It is called by the builders before save.
	role.IDValidator = roleDescID.Validators[0].(func(uint32) error)
	roleapiMixin := schema.RoleApi{}.Mixin()
	roleapiMixinFields0 := roleapiMixin[0].Fields()
	_ = roleapiMixinFields0
	roleapiFields := schema.RoleApi{}.Fields()
	_ = roleapiFields
	// roleapiDescID is the schema descriptor for id field.
	roleapiDescID := roleapiMixinFields0[0].Descriptor()
	// roleapi.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleapi.IDValidator = roleapiDescID.Validators[0].(func(uint32) error)
	roledeptMixin := schema.RoleDept{}.Mixin()
	roledeptMixinFields0 := roledeptMixin[0].Fields()
	_ = roledeptMixinFields0
	roledeptFields := schema.RoleDept{}.Fields()
	_ = roledeptFields
	// roledeptDescID is the schema descriptor for id field.
	roledeptDescID := roledeptMixinFields0[0].Descriptor()
	// roledept.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roledept.IDValidator = roledeptDescID.Validators[0].(func(uint32) error)
	rolemenuMixin := schema.RoleMenu{}.Mixin()
	rolemenuMixinFields0 := rolemenuMixin[0].Fields()
	_ = rolemenuMixinFields0
	rolemenuFields := schema.RoleMenu{}.Fields()
	_ = rolemenuFields
	// rolemenuDescID is the schema descriptor for id field.
	rolemenuDescID := rolemenuMixinFields0[0].Descriptor()
	// rolemenu.IDValidator is a validator for the "id" field. It is called by the builders before save.
	rolemenu.IDValidator = rolemenuDescID.Validators[0].(func(uint32) error)
	roleorgMixin := schema.RoleOrg{}.Mixin()
	roleorgMixinFields0 := roleorgMixin[0].Fields()
	_ = roleorgMixinFields0
	roleorgFields := schema.RoleOrg{}.Fields()
	_ = roleorgFields
	// roleorgDescID is the schema descriptor for id field.
	roleorgDescID := roleorgMixinFields0[0].Descriptor()
	// roleorg.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleorg.IDValidator = roleorgDescID.Validators[0].(func(uint32) error)
	rolepositionMixin := schema.RolePosition{}.Mixin()
	rolepositionMixinFields0 := rolepositionMixin[0].Fields()
	_ = rolepositionMixinFields0
	rolepositionFields := schema.RolePosition{}.Fields()
	_ = rolepositionFields
	// rolepositionDescID is the schema descriptor for id field.
	rolepositionDescID := rolepositionMixinFields0[0].Descriptor()
	// roleposition.IDValidator is a validator for the "id" field. It is called by the builders before save.
	roleposition.IDValidator = rolepositionDescID.Validators[0].(func(uint32) error)
	taskMixin := schema.Task{}.Mixin()
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskMixinFields4 := taskMixin[4].Fields()
	_ = taskMixinFields4
	taskMixinFields5 := taskMixin[5].Fields()
	_ = taskMixinFields5
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescRemark is the schema descriptor for remark field.
	taskDescRemark := taskMixinFields4[0].Descriptor()
	// task.DefaultRemark holds the default value on creation for the remark field.
	task.DefaultRemark = taskDescRemark.Default.(string)
	// taskDescTenantID is the schema descriptor for tenant_id field.
	taskDescTenantID := taskMixinFields5[0].Descriptor()
	// task.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	task.TenantIDValidator = taskDescTenantID.Validators[0].(func(uint32) error)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskMixinFields0[0].Descriptor()
	// task.IDValidator is a validator for the "id" field. It is called by the builders before save.
	task.IDValidator = taskDescID.Validators[0].(func(uint32) error)
	tenantMixin := schema.Tenant{}.Mixin()
	tenantMixinFields0 := tenantMixin[0].Fields()
	_ = tenantMixinFields0
	tenantMixinFields4 := tenantMixin[4].Fields()
	_ = tenantMixinFields4
	tenantFields := schema.Tenant{}.Fields()
	_ = tenantFields
	// tenantDescRemark is the schema descriptor for remark field.
	tenantDescRemark := tenantMixinFields4[0].Descriptor()
	// tenant.DefaultRemark holds the default value on creation for the remark field.
	tenant.DefaultRemark = tenantDescRemark.Default.(string)
	// tenantDescName is the schema descriptor for name field.
	tenantDescName := tenantFields[0].Descriptor()
	// tenant.NameValidator is a validator for the "name" field. It is called by the builders before save.
	tenant.NameValidator = tenantDescName.Validators[0].(func(string) error)
	// tenantDescCode is the schema descriptor for code field.
	tenantDescCode := tenantFields[1].Descriptor()
	// tenant.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	tenant.CodeValidator = tenantDescCode.Validators[0].(func(string) error)
	// tenantDescID is the schema descriptor for id field.
	tenantDescID := tenantMixinFields0[0].Descriptor()
	// tenant.IDValidator is a validator for the "id" field. It is called by the builders before save.
	tenant.IDValidator = tenantDescID.Validators[0].(func(uint32) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields4 := userMixin[4].Fields()
	_ = userMixinFields4
	userMixinFields5 := userMixin[5].Fields()
	_ = userMixinFields5
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescRemark is the schema descriptor for remark field.
	userDescRemark := userMixinFields4[0].Descriptor()
	// user.DefaultRemark holds the default value on creation for the remark field.
	user.DefaultRemark = userDescRemark.Default.(string)
	// userDescTenantID is the schema descriptor for tenant_id field.
	userDescTenantID := userMixinFields5[0].Descriptor()
	// user.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	user.TenantIDValidator = userDescTenantID.Validators[0].(func(uint32) error)
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[4].Descriptor()
	// user.DefaultMobile holds the default value on creation for the mobile field.
	user.DefaultMobile = userDescMobile.Default.(string)
	// user.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	user.MobileValidator = userDescMobile.Validators[0].(func(string) error)
	// userDescTelephone is the schema descriptor for telephone field.
	userDescTelephone := userFields[5].Descriptor()
	// user.DefaultTelephone holds the default value on creation for the telephone field.
	user.DefaultTelephone = userDescTelephone.Default.(string)
	// user.TelephoneValidator is a validator for the "telephone" field. It is called by the builders before save.
	user.TelephoneValidator = userDescTelephone.Validators[0].(func(string) error)
	// userDescAddress is the schema descriptor for address field.
	userDescAddress := userFields[7].Descriptor()
	// user.DefaultAddress holds the default value on creation for the address field.
	user.DefaultAddress = userDescAddress.Default.(string)
	// userDescRegion is the schema descriptor for region field.
	userDescRegion := userFields[8].Descriptor()
	// user.DefaultRegion holds the default value on creation for the region field.
	user.DefaultRegion = userDescRegion.Default.(string)
	// userDescDescription is the schema descriptor for description field.
	userDescDescription := userFields[9].Descriptor()
	// user.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	user.DescriptionValidator = userDescDescription.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(uint32) error)
	usercredentialMixin := schema.UserCredential{}.Mixin()
	usercredentialMixinFields1 := usercredentialMixin[1].Fields()
	_ = usercredentialMixinFields1
	usercredentialMixinFields2 := usercredentialMixin[2].Fields()
	_ = usercredentialMixinFields2
	usercredentialFields := schema.UserCredential{}.Fields()
	_ = usercredentialFields
	// usercredentialDescTenantID is the schema descriptor for tenant_id field.
	usercredentialDescTenantID := usercredentialMixinFields2[0].Descriptor()
	// usercredential.TenantIDValidator is a validator for the "tenant_id" field. It is called by the builders before save.
	usercredential.TenantIDValidator = usercredentialDescTenantID.Validators[0].(func(uint32) error)
	// usercredentialDescIdentifier is the schema descriptor for identifier field.
	usercredentialDescIdentifier := usercredentialFields[2].Descriptor()
	// usercredential.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	usercredential.IdentifierValidator = usercredentialDescIdentifier.Validators[0].(func(string) error)
	// usercredentialDescCredential is the schema descriptor for credential field.
	usercredentialDescCredential := usercredentialFields[4].Descriptor()
	// usercredential.CredentialValidator is a validator for the "credential" field. It is called by the builders before save.
	usercredential.CredentialValidator = usercredentialDescCredential.Validators[0].(func(string) error)
	// usercredentialDescIsPrimary is the schema descriptor for is_primary field.
	usercredentialDescIsPrimary := usercredentialFields[5].Descriptor()
	// usercredential.DefaultIsPrimary holds the default value on creation for the is_primary field.
	usercredential.DefaultIsPrimary = usercredentialDescIsPrimary.Default.(bool)
	// usercredentialDescActivateToken is the schema descriptor for activate_token field.
	usercredentialDescActivateToken := usercredentialFields[8].Descriptor()
	// usercredential.ActivateTokenValidator is a validator for the "activate_token" field. It is called by the builders before save.
	usercredential.ActivateTokenValidator = usercredentialDescActivateToken.Validators[0].(func(string) error)
	// usercredentialDescResetToken is the schema descriptor for reset_token field.
	usercredentialDescResetToken := usercredentialFields[9].Descriptor()
	// usercredential.ResetTokenValidator is a validator for the "reset_token" field. It is called by the builders before save.
	usercredential.ResetTokenValidator = usercredentialDescResetToken.Validators[0].(func(string) error)
	// usercredentialDescID is the schema descriptor for id field.
	usercredentialDescID := usercredentialMixinFields1[0].Descriptor()
	// usercredential.IDValidator is a validator for the "id" field. It is called by the builders before save.
	usercredential.IDValidator = usercredentialDescID.Validators[0].(func(uint32) error)
	userpositionMixin := schema.UserPosition{}.Mixin()
	userpositionMixinFields0 := userpositionMixin[0].Fields()
	_ = userpositionMixinFields0
	userpositionFields := schema.UserPosition{}.Fields()
	_ = userpositionFields
	// userpositionDescID is the schema descriptor for id field.
	userpositionDescID := userpositionMixinFields0[0].Descriptor()
	// userposition.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userposition.IDValidator = userpositionDescID.Validators[0].(func(uint32) error)
	userroleMixin := schema.UserRole{}.Mixin()
	userroleMixinFields0 := userroleMixin[0].Fields()
	_ = userroleMixinFields0
	userroleFields := schema.UserRole{}.Fields()
	_ = userroleFields
	// userroleDescID is the schema descriptor for id field.
	userroleDescID := userroleMixinFields0[0].Descriptor()
	// userrole.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userrole.IDValidator = userroleDescID.Validators[0].(func(uint32) error)
}
