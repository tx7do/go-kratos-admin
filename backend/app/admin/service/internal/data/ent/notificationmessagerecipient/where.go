// Code generated by ent, DO NOT EDIT.

package notificationmessagerecipient

import (
	"kratos-admin/app/admin/service/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldDeletedAt, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldTenantID, v))
}

// MessageID applies equality check predicate on the "message_id" field. It's identical to MessageIDEQ.
func MessageID(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldMessageID, v))
}

// RecipientID applies equality check predicate on the "recipient_id" field. It's identical to RecipientIDEQ.
func RecipientID(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldRecipientID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldUpdatedAt))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldDeletedAt))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldTenantID, v))
}

// MessageIDEQ applies the EQ predicate on the "message_id" field.
func MessageIDEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldMessageID, v))
}

// MessageIDNEQ applies the NEQ predicate on the "message_id" field.
func MessageIDNEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldMessageID, v))
}

// MessageIDIn applies the In predicate on the "message_id" field.
func MessageIDIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldMessageID, vs...))
}

// MessageIDNotIn applies the NotIn predicate on the "message_id" field.
func MessageIDNotIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldMessageID, vs...))
}

// MessageIDGT applies the GT predicate on the "message_id" field.
func MessageIDGT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldMessageID, v))
}

// MessageIDGTE applies the GTE predicate on the "message_id" field.
func MessageIDGTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldMessageID, v))
}

// MessageIDLT applies the LT predicate on the "message_id" field.
func MessageIDLT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldMessageID, v))
}

// MessageIDLTE applies the LTE predicate on the "message_id" field.
func MessageIDLTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldMessageID, v))
}

// MessageIDIsNil applies the IsNil predicate on the "message_id" field.
func MessageIDIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldMessageID))
}

// MessageIDNotNil applies the NotNil predicate on the "message_id" field.
func MessageIDNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldMessageID))
}

// RecipientIDEQ applies the EQ predicate on the "recipient_id" field.
func RecipientIDEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldRecipientID, v))
}

// RecipientIDNEQ applies the NEQ predicate on the "recipient_id" field.
func RecipientIDNEQ(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldRecipientID, v))
}

// RecipientIDIn applies the In predicate on the "recipient_id" field.
func RecipientIDIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldRecipientID, vs...))
}

// RecipientIDNotIn applies the NotIn predicate on the "recipient_id" field.
func RecipientIDNotIn(vs ...uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldRecipientID, vs...))
}

// RecipientIDGT applies the GT predicate on the "recipient_id" field.
func RecipientIDGT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGT(FieldRecipientID, v))
}

// RecipientIDGTE applies the GTE predicate on the "recipient_id" field.
func RecipientIDGTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldGTE(FieldRecipientID, v))
}

// RecipientIDLT applies the LT predicate on the "recipient_id" field.
func RecipientIDLT(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLT(FieldRecipientID, v))
}

// RecipientIDLTE applies the LTE predicate on the "recipient_id" field.
func RecipientIDLTE(v uint32) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldLTE(FieldRecipientID, v))
}

// RecipientIDIsNil applies the IsNil predicate on the "recipient_id" field.
func RecipientIDIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldRecipientID))
}

// RecipientIDNotNil applies the NotNil predicate on the "recipient_id" field.
func RecipientIDNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldRecipientID))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.FieldNotNull(FieldStatus))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.NotificationMessageRecipient) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.NotificationMessageRecipient) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.NotificationMessageRecipient) predicate.NotificationMessageRecipient {
	return predicate.NotificationMessageRecipient(sql.NotPredicates(p))
}
